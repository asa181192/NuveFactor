Imports FactorEntidades
Imports FactorDAL
Imports NPOI.XSSF.UserModel
Imports NPOI.HSSF.UserModel

Public Class Utility

  'Encriptado 


  Public Function Encripta(value As String, tipo As Enumerador.eTipoEncriptacion) As String

    Select Case tipo
      Case Enumerador.eTipoEncriptacion.eTipoPassword
        Return CRC(value)
      Case Enumerador.eTipoEncriptacion.eTipoConecciones
        Return Nothing
      Case Else
        Return Nothing
    End Select


  End Function

  Private Function CRC(Str As String) As String
    Dim nPowers(7)
    Dim nCRC, i, nBit, nByte, j
    nCRC = &HFFFF
    For i = 0 To 7
      nPowers(i) = 2 ^ i
    Next
    For i = 1 To Len(Str)
      nByte = Asc(Mid(Str, i, 1))
      For j = 7 To 0 Step -1
        nBit = CBool((nCRC And 32768) = 32768) Xor ((nByte And nPowers(j)) = nPowers(j))
        nCRC = (nCRC And 32767) * 2
        If nBit Then
          nCRC = nCRC Xor 4129
        End If
      Next
    Next
    CRC = nCRC

    Return CRC
  End Function

  'Validaciones
  Function ConsultaRFC(rfc As String, tabla As String, ByRef Nombre1 As String, ByVal Id1 As String, param1 As String, param2 As String, ByVal clave As Integer, ByRef existe As Boolean) As Result
    Dim paridad = New ValidacionesDAL()
    Return paridad.ConsultaRFC(rfc, tabla, Nombre1, Id1, param1, param2, clave, existe)
  End Function

  Function ConsultaCLABE(clabe As String, ByRef existe As Boolean, numrec As Integer) As Object
    Dim consulta = New ValidacionesDAL()
    Return consulta.consultaClabeDAL(clabe, existe, numrec)
  End Function

  Function ConsultaDeudor(deudor As Integer, producto As Integer, ByRef existe As Boolean) As Result
    Dim Consulta = New ValidacionesDAL()
    Return Consulta.ConsultaDeudorDAL(deudor, producto, existe)
  End Function

  Function ExisteAnexoContrato_Deudor(deudor As Integer, contrato As Integer, ByRef nombre As String, producto As Integer, ByRef existe As Boolean) As Result
    Dim Consulta = New ValidacionesDAL()
    Return Consulta.ExisteAnexoContrato_Deudor(deudor, contrato, nombre, producto, existe)
  End Function

  'Monitor
  Shared Function Monitor(userid As String, action As String) As Result
    If userid Is Nothing Then
      Return New Result() With {.Ok = False}
    Else
      Return Bitacora.Monitor(userid, action)
    End If
  End Function

  Function ConsultaParametroBAL(clave As String, ByRef url As String) As Result
    Dim consulta = New UtilitiesDAL()
    Return consulta.ConsultaParametros(clave, url)
  End Function

  'Excel Tools

  'Function ConvertToDataTable(Of T)(data As IList(Of T)) As DataTable
  '  Dim consulta = New UtilitiesDAL()
  '  Return consulta.ConvertToDataTable(data)
  'End Function

  'Public Function ExportToExcel(Of T)(data As IList(Of T)) As HSSFWorkbook
  '  Dim consulta = New UtilitiesDAL()
  '  Return consulta.ExportToExcel(data)
  'End Function


End Class
