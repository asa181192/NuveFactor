//Inicializacion de variables

var dropdownSucursal = $("#dropdownSucursal");
var tableProveedor;
var nombre;
var proveedor =
{
    inicializarTabla: function (sucursal) {

        tableProveedor = $('#tableProveedor')// Evento se dispara cuando se ha cargado la taba con la informacion de ajax y se na inicializado 
              .DataTable({
                ajax: {
                    "url": "../Catalogos/ObtenerListaProveedores/", // url del controlador a consultar 
                    "Type": "GET",
                    "data": function (d) { d.sucursal = sucursal }, // parametros a enviar al controlador 
                    "dataSrc": function (json) {
                        if (typeof (json.Mensaje) != 'undefined') {
                            $.Loading(false);
                            mensajemodal(json.Mensaje, 'warning', json.titulo);
                            return {};
                        } else {
                            return json.Results;
                        }
                    }
                },                
                deferRender:    true,
                paging: true, // permite la paginacion en la tabla .
                lengthMenu: [10,15,30], // Cantidad de registros mostrados por pantalla 
                searching: true, // genera cuadro de busqueda
                ordering: false, // genera ordenamiento de columnas 
                //order: [[0, 'desc']], // ordena la primer columna
                responsive: true, // realiza la tabla responsiva en moviles
                destroy: true, // permite que cuando se realize una nueva consulta se destruya la vieja tabla y genere una nueva . 
                columns: [ // permite saber que columnas se usaran del json retornado desde el servidor . 
           { data: "deudor" },
           {
               data: "nombre", orderable: false, "render": function (data) {
                   nombre = data
                   return data
               }
           },
           {
               data: "deudor", "width": "50px", "render": function (data) {
                   return '<a class="popup" href="../Catalogos/GuardarProveedor?deudor=' + data + '" add=' + data + ' nombre="' + nombre + '" ><button type="button" class="btn glyphicon glyphicon-pencil"></button></a>';
               }, orderable: false
           } // Hace referencia al boton de Editar
                ],
                "columnDefs": [
                    { "className": "dt-body-center", "targets": [2] } // permite centrar botones de edicion 
                ]
            });


    }, //Funcion que inicializa la tabla 
    openPopUp: function (pageUrl) {
        var $pageContent = $('<div>');  

        $pageContent.load(pageUrl,
            function() {
                $pageContent.dialog({
                    width: '700', // overcomes width:'auto' and maxWidth bug
                    height: 'auto',
                    title: title == null ? "Nuevo Registro" : nombre + " (" + title + ")",
                    modal: true,
                    show: 'fade',
                    hide: 'fade',
                    fluid: true, //new option
                    resizable: false,
                    create: function(event, ui) { // setea elementos internos del popup 

                        var form = $("#popupForm")
                        form.removeData('validator'); //permite reiniciar el validado de informacion al despelgar una ventana modal
                        form.removeData('unobtrusiveValidation');
                        $.validator.unobtrusive.parse(form);
                        
                        $("#popupForm").find(':input').each(function () {

                            var value = $(this).val()
                            $(this).val(value.trim())

                        });

                        $('#rfc').keyup(function () {
                            $(this).val($(this).val().toUpperCase());
                        });

                        $("#submit").click(function () {
                            if (!$("#popupForm").valid()) {
                                var message = ""
                                $("input.input-validation-error").each(function (index) {
                                    if (!$("[data-valmsg-for='" + $("input.input-validation-error")[index].getAttribute("id") + "']").text() == "") {
                                        message = message + "- " + $("[data-valmsg-for='" + $("input.input-validation-error")[index].getAttribute("id") + "']").text() + "<br/>"
                                    }
                                });
                                mensajemodal(message, "warning", "Revisar los siguientes campos !!");
                            }
                        })
                                              
                        // Validacion de tool tip 
                        $pageContent.tooltip({
                            items: ".input-validation-error",
                            content: function () {
                                return $("[data-valmsg-for='" + $(this).attr('id') + "']").text() ;
                            }
                        });
                    },
                    close: function() {
                        $pageContent.dialog('destroy').remove();
                    }
                });

            });

        $pageContent.on('submit',
            '#popupForm',
            function (e) {
                var url = $('#popupForm')[0].action;
                $.ajax({
                    type: "POST",
                    url: url,
                    data: $('#popupForm').serialize(),
                    beforeSend :function() {
                        $.Loading(true);
                    },
                    success: function (data) {
                        if (data.Result) {
                            mensajemodal(data.Text, data.color , data.titulo);
                            if (tableProveedor !== undefined) {
                               tableProveedor.ajax.reload(null, false); // False- permite quedarte en la misma pagina despues de actualizar
                            }
                        } else {
                            mensajemodal(data.Text, data.color , data.titulo);
                        }
                        if (data.Tipo == 1 || data.Tipo == 2) {
                            $pageContent.dialog('close');
                        }
                       
                    },
                    error: function () {
                        mensajemodal('Ocurrio un error al consultar la informacion favor de intentar de nuevo!!', 'warning');
                        
                    },
                    complete :function() {
                        $.Loading(false);
                    }
                });

                e.preventDefault();
            });
    }, // popup
    fluidDialog:function() {
        var $visible = $(".ui-dialog:visible");
        // each open dialog
        $visible.each(function () {
            var $this = $(this);
            var dialog = $this.find(".ui-dialog-content").data("ui-dialog");
            // if fluid option == true
            if (dialog.options.fluid) {
                var wWidth = $(window).width();
                // check window width against dialog width
                if (wWidth < (parseInt(dialog.options.maxWidth) + 50)) {
                    // keep dialog from filling entire screen
                    $this.css("max-width", "90%");
                } else {
                    // fix maxWidth bug
                    $this.css("max-width", dialog.options.maxWidth + "px");
                }
                //reposition dialog
                dialog.option("position", dialog.options.position);
            }
        });

    }, //popup responsivo
    validacionCampos: function () {

       // Este codigo permite desabilitar la funcion de KeyUp
        jQuery.validator.setDefaults({
             onkeyup: function () {
                 var originalKeyUp = $.validator.defaults.onkeyup;
                 var customKeyUp = function (element, event) {
                     if ($("#rfc")[0] === element) {
                         return false;
                     }
                     else {
                         return originalKeyUp.call(this, element, event);
                     }
                 }
                 return customKeyUp;
             }(),
            ignore : ""
         });

         jQuery.validator.addMethod(
                'date',
                function (value, element, params) {
                    if (this.optional(element)) {
                        return true;
                    };
                    var result = false;
                    try {
                        $.datepicker.parseDate("dd/mm/yy", value);
                        result = true;
                    } catch (err) {
                        result = false;
                    }
                    return result;
                },
                ''
            );
    } // validacion de campos 
}

$(document).ready(function (e) {

    //Esto nos permite Abrir modal dentro de modal . 
    $.fn.modal.Constructor.prototype.enforceFocus = function () { };

    proveedor.inicializarTabla(dropdownSucursal.val());
    proveedor.validacionCampos();
    dropdownSucursal.change(function(e) {
        proveedor.inicializarTabla(dropdownSucursal.val());
    });

    $("#tableContainer").on('click', 'a.popup',
        function (e) {
            e.preventDefault();
            title = $(this).attr("add") // set the title for popup
            nombre = $(this).attr("nombre")
            proveedor.openPopUp($(this).attr('href'));

        });
    $(window).resize(function () {
         proveedor.fluidDialog();
    });


});

