'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("FactorDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class FactorDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableSP_ReporteControlRiesgo As SP_ReporteControlRiesgoDataTable
    
    Private tableNotificacionesDetalle As NotificacionesDetalleDataTable
    
    Private tableSP_ConsultaAforosLiquidados As SP_ConsultaAforosLiquidadosDataTable
    
    Private tabledetalle As detalleDataTable
    
    Private tableSP_InformaCobros As SP_InformaCobrosDataTable
    
    Private tableReporteadeudos As ReporteadeudosDataTable
    
    Private tableAnexo As AnexoDataTable
    
    Private tableusersregs As usersregsDataTable
    
    Private tableRebatemensual As RebatemensualDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SP_ReporteControlRiesgo")) Is Nothing) Then
                MyBase.Tables.Add(New SP_ReporteControlRiesgoDataTable(ds.Tables("SP_ReporteControlRiesgo")))
            End If
            If (Not (ds.Tables("NotificacionesDetalle")) Is Nothing) Then
                MyBase.Tables.Add(New NotificacionesDetalleDataTable(ds.Tables("NotificacionesDetalle")))
            End If
            If (Not (ds.Tables("SP_ConsultaAforosLiquidados")) Is Nothing) Then
                MyBase.Tables.Add(New SP_ConsultaAforosLiquidadosDataTable(ds.Tables("SP_ConsultaAforosLiquidados")))
            End If
            If (Not (ds.Tables("detalle")) Is Nothing) Then
                MyBase.Tables.Add(New detalleDataTable(ds.Tables("detalle")))
            End If
            If (Not (ds.Tables("SP_InformaCobros")) Is Nothing) Then
                MyBase.Tables.Add(New SP_InformaCobrosDataTable(ds.Tables("SP_InformaCobros")))
            End If
            If (Not (ds.Tables("Reporteadeudos")) Is Nothing) Then
                MyBase.Tables.Add(New ReporteadeudosDataTable(ds.Tables("Reporteadeudos")))
            End If
            If (Not (ds.Tables("Anexo")) Is Nothing) Then
                MyBase.Tables.Add(New AnexoDataTable(ds.Tables("Anexo")))
            End If
            If (Not (ds.Tables("Usersregs")) Is Nothing) Then
                MyBase.Tables.Add(New usersregsDataTable(ds.Tables("Usersregs")))
            End If
            If (Not (ds.Tables("Rebatemensual")) Is Nothing) Then
                MyBase.Tables.Add(New RebatemensualDataTable(ds.Tables("Rebatemensual")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SP_ReporteControlRiesgo() As SP_ReporteControlRiesgoDataTable
        Get
            Return Me.tableSP_ReporteControlRiesgo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property NotificacionesDetalle() As NotificacionesDetalleDataTable
        Get
            Return Me.tableNotificacionesDetalle
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SP_ConsultaAforosLiquidados() As SP_ConsultaAforosLiquidadosDataTable
        Get
            Return Me.tableSP_ConsultaAforosLiquidados
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property detalle() As detalleDataTable
        Get
            Return Me.tabledetalle
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SP_InformaCobros() As SP_InformaCobrosDataTable
        Get
            Return Me.tableSP_InformaCobros
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Reporteadeudos() As ReporteadeudosDataTable
        Get
            Return Me.tableReporteadeudos
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Anexo() As AnexoDataTable
        Get
            Return Me.tableAnexo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property usersregs() As usersregsDataTable
        Get
            Return Me.tableusersregs
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rebatemensual() As RebatemensualDataTable
        Get
            Return Me.tableRebatemensual
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As FactorDataSet = CType(MyBase.Clone,FactorDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("SP_ReporteControlRiesgo")) Is Nothing) Then
                MyBase.Tables.Add(New SP_ReporteControlRiesgoDataTable(ds.Tables("SP_ReporteControlRiesgo")))
            End If
            If (Not (ds.Tables("NotificacionesDetalle")) Is Nothing) Then
                MyBase.Tables.Add(New NotificacionesDetalleDataTable(ds.Tables("NotificacionesDetalle")))
            End If
            If (Not (ds.Tables("SP_ConsultaAforosLiquidados")) Is Nothing) Then
                MyBase.Tables.Add(New SP_ConsultaAforosLiquidadosDataTable(ds.Tables("SP_ConsultaAforosLiquidados")))
            End If
            If (Not (ds.Tables("detalle")) Is Nothing) Then
                MyBase.Tables.Add(New detalleDataTable(ds.Tables("detalle")))
            End If
            If (Not (ds.Tables("SP_InformaCobros")) Is Nothing) Then
                MyBase.Tables.Add(New SP_InformaCobrosDataTable(ds.Tables("SP_InformaCobros")))
            End If
            If (Not (ds.Tables("Reporteadeudos")) Is Nothing) Then
                MyBase.Tables.Add(New ReporteadeudosDataTable(ds.Tables("Reporteadeudos")))
            End If
            If (Not (ds.Tables("Anexo")) Is Nothing) Then
                MyBase.Tables.Add(New AnexoDataTable(ds.Tables("Anexo")))
            End If
            If (Not (ds.Tables("Usersregs")) Is Nothing) Then
                MyBase.Tables.Add(New usersregsDataTable(ds.Tables("Usersregs")))
            End If
            If (Not (ds.Tables("Rebatemensual")) Is Nothing) Then
                MyBase.Tables.Add(New RebatemensualDataTable(ds.Tables("Rebatemensual")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSP_ReporteControlRiesgo = CType(MyBase.Tables("SP_ReporteControlRiesgo"),SP_ReporteControlRiesgoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSP_ReporteControlRiesgo) Is Nothing) Then
                Me.tableSP_ReporteControlRiesgo.InitVars
            End If
        End If
        Me.tableNotificacionesDetalle = CType(MyBase.Tables("NotificacionesDetalle"),NotificacionesDetalleDataTable)
        If (initTable = true) Then
            If (Not (Me.tableNotificacionesDetalle) Is Nothing) Then
                Me.tableNotificacionesDetalle.InitVars
            End If
        End If
        Me.tableSP_ConsultaAforosLiquidados = CType(MyBase.Tables("SP_ConsultaAforosLiquidados"),SP_ConsultaAforosLiquidadosDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSP_ConsultaAforosLiquidados) Is Nothing) Then
                Me.tableSP_ConsultaAforosLiquidados.InitVars
            End If
        End If
        Me.tabledetalle = CType(MyBase.Tables("detalle"),detalleDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledetalle) Is Nothing) Then
                Me.tabledetalle.InitVars
            End If
        End If
        Me.tableSP_InformaCobros = CType(MyBase.Tables("SP_InformaCobros"),SP_InformaCobrosDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSP_InformaCobros) Is Nothing) Then
                Me.tableSP_InformaCobros.InitVars
            End If
        End If
        Me.tableReporteadeudos = CType(MyBase.Tables("Reporteadeudos"),ReporteadeudosDataTable)
        If (initTable = true) Then
            If (Not (Me.tableReporteadeudos) Is Nothing) Then
                Me.tableReporteadeudos.InitVars
            End If
        End If
        Me.tableAnexo = CType(MyBase.Tables("Anexo"),AnexoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAnexo) Is Nothing) Then
                Me.tableAnexo.InitVars
            End If
        End If
        Me.tableusersregs = CType(MyBase.Tables("Usersregs"),usersregsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableusersregs) Is Nothing) Then
                Me.tableusersregs.InitVars
            End If
        End If
        Me.tableRebatemensual = CType(MyBase.Tables("Rebatemensual"),RebatemensualDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRebatemensual) Is Nothing) Then
                Me.tableRebatemensual.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "FactorDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/FactorDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSP_ReporteControlRiesgo = New SP_ReporteControlRiesgoDataTable()
        MyBase.Tables.Add(Me.tableSP_ReporteControlRiesgo)
        Me.tableNotificacionesDetalle = New NotificacionesDetalleDataTable()
        MyBase.Tables.Add(Me.tableNotificacionesDetalle)
        Me.tableSP_ConsultaAforosLiquidados = New SP_ConsultaAforosLiquidadosDataTable()
        MyBase.Tables.Add(Me.tableSP_ConsultaAforosLiquidados)
        Me.tabledetalle = New detalleDataTable()
        MyBase.Tables.Add(Me.tabledetalle)
        Me.tableSP_InformaCobros = New SP_InformaCobrosDataTable()
        MyBase.Tables.Add(Me.tableSP_InformaCobros)
        Me.tableReporteadeudos = New ReporteadeudosDataTable()
        MyBase.Tables.Add(Me.tableReporteadeudos)
        Me.tableAnexo = New AnexoDataTable()
        MyBase.Tables.Add(Me.tableAnexo)
        Me.tableusersregs = New usersregsDataTable()
        MyBase.Tables.Add(Me.tableusersregs)
        Me.tableRebatemensual = New RebatemensualDataTable()
        MyBase.Tables.Add(Me.tableRebatemensual)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSP_ReporteControlRiesgo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeNotificacionesDetalle() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSP_ConsultaAforosLiquidados() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedetalle() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSP_InformaCobros() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeReporteadeudos() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeAnexo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeusersregs() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRebatemensual() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As FactorDataSet = New FactorDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SP_ReporteControlRiesgoRowChangeEventHandler(ByVal sender As Object, ByVal e As SP_ReporteControlRiesgoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub NotificacionesDetalleRowChangeEventHandler(ByVal sender As Object, ByVal e As NotificacionesDetalleRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SP_ConsultaAforosLiquidadosRowChangeEventHandler(ByVal sender As Object, ByVal e As SP_ConsultaAforosLiquidadosRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub detalleRowChangeEventHandler(ByVal sender As Object, ByVal e As detalleRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SP_InformaCobrosRowChangeEventHandler(ByVal sender As Object, ByVal e As SP_InformaCobrosRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ReporteadeudosRowChangeEventHandler(ByVal sender As Object, ByVal e As ReporteadeudosRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub AnexoRowChangeEventHandler(ByVal sender As Object, ByVal e As AnexoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub usersregsRowChangeEventHandler(ByVal sender As Object, ByVal e As usersregsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RebatemensualRowChangeEventHandler(ByVal sender As Object, ByVal e As RebatemensualRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SP_ReporteControlRiesgoDataTable
        Inherits Global.System.Data.TypedTableBase(Of SP_ReporteControlRiesgoRow)
        
        Private columnlcredito As Global.System.Data.DataColumn
        
        Private columnid_rec As Global.System.Data.DataColumn
        
        Private columnclientet24 As Global.System.Data.DataColumn
        
        Private columncliente As Global.System.Data.DataColumn
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columnldescrip As Global.System.Data.DataColumn
        
        Private columnlmonto As Global.System.Data.DataColumn
        
        Private columnlutilizado As Global.System.Data.DataColumn
        
        Private columnldisponibl As Global.System.Data.DataColumn
        
        Private columnlvence As Global.System.Data.DataColumn
        
        Private columnporcentaje As Global.System.Data.DataColumn
        
        Private columnidmultiple As Global.System.Data.DataColumn
        
        Private columncuenta As Global.System.Data.DataColumn
        
        Private columnadeudo As Global.System.Data.DataColumn
        
        Private columnvencida As Global.System.Data.DataColumn
        
        Private columngarantsdo As Global.System.Data.DataColumn
        
        Private columngarantutl As Global.System.Data.DataColumn
        
        Private columnlmultiple As Global.System.Data.DataColumn
        
        Private columnRgoDesc As Global.System.Data.DataColumn
        
        Private columngliq As Global.System.Data.DataColumn
        
        Private columnCancela As Global.System.Data.DataColumn
        
        Private columnInfolinea As Global.System.Data.DataColumn
        
        Private columnDiv As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SP_ReporteControlRiesgo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lcreditoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlcredito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property id_recColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_rec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clientet24Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnclientet24
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ldescripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnldescrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lmontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlmonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lutilizadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlutilizado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ldisponiblColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnldisponibl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lvenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlvence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property porcentajeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnporcentaje
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idmultipleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidmultiple
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncuenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adeudoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadeudo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vencidaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvencida
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property garantsdoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngarantsdo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property garantutlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngarantutl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lmultipleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlmultiple
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RgoDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRgoDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property gliqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngliq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CancelaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCancela
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InfolineaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInfolinea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DivColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SP_ReporteControlRiesgoRow
            Get
                Return CType(Me.Rows(index),SP_ReporteControlRiesgoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ReporteControlRiesgoRowChanging As SP_ReporteControlRiesgoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ReporteControlRiesgoRowChanged As SP_ReporteControlRiesgoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ReporteControlRiesgoRowDeleting As SP_ReporteControlRiesgoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ReporteControlRiesgoRowDeleted As SP_ReporteControlRiesgoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSP_ReporteControlRiesgoRow(ByVal row As SP_ReporteControlRiesgoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSP_ReporteControlRiesgoRow( _
                    ByVal lcredito As String,  _
                    ByVal id_rec As String,  _
                    ByVal clientet24 As Decimal,  _
                    ByVal cliente As Integer,  _
                    ByVal nombre As String,  _
                    ByVal ldescrip As String,  _
                    ByVal lmonto As Decimal,  _
                    ByVal lutilizado As Decimal,  _
                    ByVal ldisponibl As Decimal,  _
                    ByVal lvence As Date,  _
                    ByVal porcentaje As Decimal,  _
                    ByVal idmultiple As String,  _
                    ByVal cuenta As String,  _
                    ByVal adeudo As Decimal,  _
                    ByVal vencida As Decimal,  _
                    ByVal garantsdo As Decimal,  _
                    ByVal garantutl As Decimal,  _
                    ByVal lmultiple As Decimal,  _
                    ByVal RgoDesc As String,  _
                    ByVal gliq As String,  _
                    ByVal Cancela As String,  _
                    ByVal Infolinea As String,  _
                    ByVal Div As String) As SP_ReporteControlRiesgoRow
            Dim rowSP_ReporteControlRiesgoRow As SP_ReporteControlRiesgoRow = CType(Me.NewRow,SP_ReporteControlRiesgoRow)
            Dim columnValuesArray() As Object = New Object() {lcredito, id_rec, clientet24, cliente, nombre, ldescrip, lmonto, lutilizado, ldisponibl, lvence, porcentaje, idmultiple, cuenta, adeudo, vencida, garantsdo, garantutl, lmultiple, RgoDesc, gliq, Cancela, Infolinea, Div}
            rowSP_ReporteControlRiesgoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSP_ReporteControlRiesgoRow)
            Return rowSP_ReporteControlRiesgoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SP_ReporteControlRiesgoDataTable = CType(MyBase.Clone,SP_ReporteControlRiesgoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SP_ReporteControlRiesgoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnlcredito = MyBase.Columns("lcredito")
            Me.columnid_rec = MyBase.Columns("id_rec")
            Me.columnclientet24 = MyBase.Columns("clientet24")
            Me.columncliente = MyBase.Columns("cliente")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columnldescrip = MyBase.Columns("ldescrip")
            Me.columnlmonto = MyBase.Columns("lmonto")
            Me.columnlutilizado = MyBase.Columns("lutilizado")
            Me.columnldisponibl = MyBase.Columns("ldisponibl")
            Me.columnlvence = MyBase.Columns("lvence")
            Me.columnporcentaje = MyBase.Columns("porcentaje")
            Me.columnidmultiple = MyBase.Columns("idmultiple")
            Me.columncuenta = MyBase.Columns("cuenta")
            Me.columnadeudo = MyBase.Columns("adeudo")
            Me.columnvencida = MyBase.Columns("vencida")
            Me.columngarantsdo = MyBase.Columns("garantsdo")
            Me.columngarantutl = MyBase.Columns("garantutl")
            Me.columnlmultiple = MyBase.Columns("lmultiple")
            Me.columnRgoDesc = MyBase.Columns("RgoDesc")
            Me.columngliq = MyBase.Columns("gliq")
            Me.columnCancela = MyBase.Columns("Cancela")
            Me.columnInfolinea = MyBase.Columns("Infolinea")
            Me.columnDiv = MyBase.Columns("Div")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnlcredito = New Global.System.Data.DataColumn("lcredito", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlcredito)
            Me.columnid_rec = New Global.System.Data.DataColumn("id_rec", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_rec)
            Me.columnclientet24 = New Global.System.Data.DataColumn("clientet24", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclientet24)
            Me.columncliente = New Global.System.Data.DataColumn("cliente", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncliente)
            Me.columnnombre = New Global.System.Data.DataColumn("nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columnldescrip = New Global.System.Data.DataColumn("ldescrip", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnldescrip)
            Me.columnlmonto = New Global.System.Data.DataColumn("lmonto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlmonto)
            Me.columnlutilizado = New Global.System.Data.DataColumn("lutilizado", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlutilizado)
            Me.columnldisponibl = New Global.System.Data.DataColumn("ldisponibl", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnldisponibl)
            Me.columnlvence = New Global.System.Data.DataColumn("lvence", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlvence)
            Me.columnporcentaje = New Global.System.Data.DataColumn("porcentaje", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnporcentaje)
            Me.columnidmultiple = New Global.System.Data.DataColumn("idmultiple", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidmultiple)
            Me.columncuenta = New Global.System.Data.DataColumn("cuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuenta)
            Me.columnadeudo = New Global.System.Data.DataColumn("adeudo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadeudo)
            Me.columnvencida = New Global.System.Data.DataColumn("vencida", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvencida)
            Me.columngarantsdo = New Global.System.Data.DataColumn("garantsdo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngarantsdo)
            Me.columngarantutl = New Global.System.Data.DataColumn("garantutl", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngarantutl)
            Me.columnlmultiple = New Global.System.Data.DataColumn("lmultiple", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlmultiple)
            Me.columnRgoDesc = New Global.System.Data.DataColumn("RgoDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRgoDesc)
            Me.columngliq = New Global.System.Data.DataColumn("gliq", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngliq)
            Me.columnCancela = New Global.System.Data.DataColumn("Cancela", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCancela)
            Me.columnInfolinea = New Global.System.Data.DataColumn("Infolinea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInfolinea)
            Me.columnDiv = New Global.System.Data.DataColumn("Div", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiv)
            Me.columnlcredito.ReadOnly = true
            Me.columnlcredito.MaxLength = 21
            Me.columnid_rec.ReadOnly = true
            Me.columnid_rec.MaxLength = 28
            Me.columnclientet24.ReadOnly = true
            Me.columncliente.ReadOnly = true
            Me.columnnombre.ReadOnly = true
            Me.columnnombre.MaxLength = 100
            Me.columnldescrip.ReadOnly = true
            Me.columnldescrip.MaxLength = 100
            Me.columnlmonto.ReadOnly = true
            Me.columnlutilizado.ReadOnly = true
            Me.columnldisponibl.ReadOnly = true
            Me.columnlvence.ReadOnly = true
            Me.columnporcentaje.ReadOnly = true
            Me.columnidmultiple.ReadOnly = true
            Me.columnidmultiple.MaxLength = 10
            Me.columncuenta.ReadOnly = true
            Me.columncuenta.MaxLength = 11
            Me.columnadeudo.ReadOnly = true
            Me.columnvencida.ReadOnly = true
            Me.columngarantsdo.ReadOnly = true
            Me.columngarantutl.ReadOnly = true
            Me.columnlmultiple.ReadOnly = true
            Me.columnRgoDesc.ReadOnly = true
            Me.columnRgoDesc.MaxLength = 10
            Me.columngliq.ReadOnly = true
            Me.columngliq.MaxLength = 2
            Me.columnCancela.ReadOnly = true
            Me.columnCancela.MaxLength = 1
            Me.columnInfolinea.ReadOnly = true
            Me.columnInfolinea.MaxLength = 6
            Me.columnDiv.ReadOnly = true
            Me.columnDiv.MaxLength = 3
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSP_ReporteControlRiesgoRow() As SP_ReporteControlRiesgoRow
            Return CType(Me.NewRow,SP_ReporteControlRiesgoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SP_ReporteControlRiesgoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SP_ReporteControlRiesgoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SP_ReporteControlRiesgoRowChangedEvent) Is Nothing) Then
                RaiseEvent SP_ReporteControlRiesgoRowChanged(Me, New SP_ReporteControlRiesgoRowChangeEvent(CType(e.Row,SP_ReporteControlRiesgoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SP_ReporteControlRiesgoRowChangingEvent) Is Nothing) Then
                RaiseEvent SP_ReporteControlRiesgoRowChanging(Me, New SP_ReporteControlRiesgoRowChangeEvent(CType(e.Row,SP_ReporteControlRiesgoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SP_ReporteControlRiesgoRowDeletedEvent) Is Nothing) Then
                RaiseEvent SP_ReporteControlRiesgoRowDeleted(Me, New SP_ReporteControlRiesgoRowChangeEvent(CType(e.Row,SP_ReporteControlRiesgoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SP_ReporteControlRiesgoRowDeletingEvent) Is Nothing) Then
                RaiseEvent SP_ReporteControlRiesgoRowDeleting(Me, New SP_ReporteControlRiesgoRowChangeEvent(CType(e.Row,SP_ReporteControlRiesgoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSP_ReporteControlRiesgoRow(ByVal row As SP_ReporteControlRiesgoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As FactorDataSet = New FactorDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SP_ReporteControlRiesgoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class NotificacionesDetalleDataTable
        Inherits Global.System.Data.TypedTableBase(Of NotificacionesDetalleRow)
        
        Private columncontrato As Global.System.Data.DataColumn
        
        Private columncesion As Global.System.Data.DataColumn
        
        Private columndocto As Global.System.Data.DataColumn
        
        Private columndeudor As Global.System.Data.DataColumn
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columndeuname As Global.System.Data.DataColumn
        
        Private columncalle As Global.System.Data.DataColumn
        
        Private columnnoext As Global.System.Data.DataColumn
        
        Private columnnoint As Global.System.Data.DataColumn
        
        Private columndomicilio As Global.System.Data.DataColumn
        
        Private columnmunicipio As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        Private columncolonia As Global.System.Data.DataColumn
        
        Private columnmoneda As Global.System.Data.DataColumn
        
        Private columnfec_alta As Global.System.Data.DataColumn
        
        Private columnfec_vence As Global.System.Data.DataColumn
        
        Private columnmonto As Global.System.Data.DataColumn
        
        Private columnpagare As Global.System.Data.DataColumn
        
        Private columnCdomicilio As Global.System.Data.DataColumn
        
        Private columnCmunicipio As Global.System.Data.DataColumn
        
        Private columncveedo As Global.System.Data.DataColumn
        
        Private columncvecd As Global.System.Data.DataColumn
        
        Private columnCestado As Global.System.Data.DataColumn
        
        Private columnCnombre As Global.System.Data.DataColumn
        
        Private columncColonia As Global.System.Data.DataColumn
        
        Private columncp As Global.System.Data.DataColumn
        
        Private columnccp As Global.System.Data.DataColumn
        
        Private columnemail As Global.System.Data.DataColumn
        
        Private columnAltacont As Global.System.Data.DataColumn
        
        Private columnproducto As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "NotificacionesDetalle"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contratoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontrato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cesionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncesion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property doctoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndocto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deudorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndeudor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deunameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndeuname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property calleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property noextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnoext
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nointColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnoint
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property domicilioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomicilio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property municipioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmunicipio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property coloniaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncolonia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property monedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fec_altaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfec_alta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fec_venceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfec_vence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property montoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pagareColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpagare
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CdomicilioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCdomicilio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CmunicipioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCmunicipio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cveedoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncveedo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cvecdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncvecd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CestadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CnombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cColoniaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncColonia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ccpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnccp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AltacontColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAltacont
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property productoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As NotificacionesDetalleRow
            Get
                Return CType(Me.Rows(index),NotificacionesDetalleRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event NotificacionesDetalleRowChanging As NotificacionesDetalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event NotificacionesDetalleRowChanged As NotificacionesDetalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event NotificacionesDetalleRowDeleting As NotificacionesDetalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event NotificacionesDetalleRowDeleted As NotificacionesDetalleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddNotificacionesDetalleRow(ByVal row As NotificacionesDetalleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddNotificacionesDetalleRow( _
                    ByVal contrato As Integer,  _
                    ByVal cesion As Integer,  _
                    ByVal docto As String,  _
                    ByVal deudor As Integer,  _
                    ByVal nombre As String,  _
                    ByVal deuname As String,  _
                    ByVal calle As String,  _
                    ByVal noext As String,  _
                    ByVal noint As String,  _
                    ByVal domicilio As String,  _
                    ByVal municipio As String,  _
                    ByVal estado As String,  _
                    ByVal colonia As String,  _
                    ByVal moneda As Integer,  _
                    ByVal fec_alta As Date,  _
                    ByVal fec_vence As Date,  _
                    ByVal monto As Decimal,  _
                    ByVal pagare As String,  _
                    ByVal Cdomicilio As String,  _
                    ByVal Cmunicipio As String,  _
                    ByVal cveedo As Integer,  _
                    ByVal cvecd As Integer,  _
                    ByVal Cestado As String,  _
                    ByVal Cnombre As String,  _
                    ByVal cColonia As String,  _
                    ByVal cp As Integer,  _
                    ByVal ccp As Integer,  _
                    ByVal email As String,  _
                    ByVal Altacont As Date,  _
                    ByVal producto As Integer) As NotificacionesDetalleRow
            Dim rowNotificacionesDetalleRow As NotificacionesDetalleRow = CType(Me.NewRow,NotificacionesDetalleRow)
            Dim columnValuesArray() As Object = New Object() {contrato, cesion, docto, deudor, nombre, deuname, calle, noext, noint, domicilio, municipio, estado, colonia, moneda, fec_alta, fec_vence, monto, pagare, Cdomicilio, Cmunicipio, cveedo, cvecd, Cestado, Cnombre, cColonia, cp, ccp, email, Altacont, producto}
            rowNotificacionesDetalleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowNotificacionesDetalleRow)
            Return rowNotificacionesDetalleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As NotificacionesDetalleDataTable = CType(MyBase.Clone,NotificacionesDetalleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New NotificacionesDetalleDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncontrato = MyBase.Columns("contrato")
            Me.columncesion = MyBase.Columns("cesion")
            Me.columndocto = MyBase.Columns("docto")
            Me.columndeudor = MyBase.Columns("deudor")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columndeuname = MyBase.Columns("deuname")
            Me.columncalle = MyBase.Columns("calle")
            Me.columnnoext = MyBase.Columns("noext")
            Me.columnnoint = MyBase.Columns("noint")
            Me.columndomicilio = MyBase.Columns("domicilio")
            Me.columnmunicipio = MyBase.Columns("municipio")
            Me.columnestado = MyBase.Columns("estado")
            Me.columncolonia = MyBase.Columns("colonia")
            Me.columnmoneda = MyBase.Columns("moneda")
            Me.columnfec_alta = MyBase.Columns("fec_alta")
            Me.columnfec_vence = MyBase.Columns("fec_vence")
            Me.columnmonto = MyBase.Columns("monto")
            Me.columnpagare = MyBase.Columns("pagare")
            Me.columnCdomicilio = MyBase.Columns("Cdomicilio")
            Me.columnCmunicipio = MyBase.Columns("Cmunicipio")
            Me.columncveedo = MyBase.Columns("cveedo")
            Me.columncvecd = MyBase.Columns("cvecd")
            Me.columnCestado = MyBase.Columns("Cestado")
            Me.columnCnombre = MyBase.Columns("Cnombre")
            Me.columncColonia = MyBase.Columns("cColonia")
            Me.columncp = MyBase.Columns("cp")
            Me.columnccp = MyBase.Columns("ccp")
            Me.columnemail = MyBase.Columns("email")
            Me.columnAltacont = MyBase.Columns("Altacont")
            Me.columnproducto = MyBase.Columns("producto")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columncontrato = New Global.System.Data.DataColumn("contrato", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontrato)
            Me.columncesion = New Global.System.Data.DataColumn("cesion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncesion)
            Me.columndocto = New Global.System.Data.DataColumn("docto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndocto)
            Me.columndeudor = New Global.System.Data.DataColumn("deudor", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeudor)
            Me.columnnombre = New Global.System.Data.DataColumn("nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columndeuname = New Global.System.Data.DataColumn("deuname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeuname)
            Me.columncalle = New Global.System.Data.DataColumn("calle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncalle)
            Me.columnnoext = New Global.System.Data.DataColumn("noext", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnoext)
            Me.columnnoint = New Global.System.Data.DataColumn("noint", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnoint)
            Me.columndomicilio = New Global.System.Data.DataColumn("domicilio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomicilio)
            Me.columnmunicipio = New Global.System.Data.DataColumn("municipio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmunicipio)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.columncolonia = New Global.System.Data.DataColumn("colonia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncolonia)
            Me.columnmoneda = New Global.System.Data.DataColumn("moneda", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmoneda)
            Me.columnfec_alta = New Global.System.Data.DataColumn("fec_alta", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfec_alta)
            Me.columnfec_vence = New Global.System.Data.DataColumn("fec_vence", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfec_vence)
            Me.columnmonto = New Global.System.Data.DataColumn("monto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmonto)
            Me.columnpagare = New Global.System.Data.DataColumn("pagare", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpagare)
            Me.columnCdomicilio = New Global.System.Data.DataColumn("Cdomicilio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCdomicilio)
            Me.columnCmunicipio = New Global.System.Data.DataColumn("Cmunicipio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCmunicipio)
            Me.columncveedo = New Global.System.Data.DataColumn("cveedo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncveedo)
            Me.columncvecd = New Global.System.Data.DataColumn("cvecd", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncvecd)
            Me.columnCestado = New Global.System.Data.DataColumn("Cestado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCestado)
            Me.columnCnombre = New Global.System.Data.DataColumn("Cnombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCnombre)
            Me.columncColonia = New Global.System.Data.DataColumn("cColonia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncColonia)
            Me.columncp = New Global.System.Data.DataColumn("cp", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncp)
            Me.columnccp = New Global.System.Data.DataColumn("ccp", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnccp)
            Me.columnemail = New Global.System.Data.DataColumn("email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail)
            Me.columnAltacont = New Global.System.Data.DataColumn("Altacont", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAltacont)
            Me.columnproducto = New Global.System.Data.DataColumn("producto", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducto)
            Me.columndocto.MaxLength = 20
            Me.columnnombre.MaxLength = 100
            Me.columndeuname.MaxLength = 100
            Me.columncalle.MaxLength = 50
            Me.columnnoext.MaxLength = 15
            Me.columnnoint.MaxLength = 1000
            Me.columndomicilio.MaxLength = 50
            Me.columnmunicipio.MaxLength = 50
            Me.columnestado.MaxLength = 50
            Me.columncolonia.MaxLength = 50
            Me.columnpagare.MaxLength = 20
            Me.columnCdomicilio.ReadOnly = true
            Me.columnCdomicilio.MaxLength = 66
            Me.columnCmunicipio.MaxLength = 50
            Me.columnCestado.MaxLength = 50
            Me.columnCnombre.MaxLength = 100
            Me.columncColonia.MaxLength = 50
            Me.columnemail.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewNotificacionesDetalleRow() As NotificacionesDetalleRow
            Return CType(Me.NewRow,NotificacionesDetalleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New NotificacionesDetalleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(NotificacionesDetalleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.NotificacionesDetalleRowChangedEvent) Is Nothing) Then
                RaiseEvent NotificacionesDetalleRowChanged(Me, New NotificacionesDetalleRowChangeEvent(CType(e.Row,NotificacionesDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.NotificacionesDetalleRowChangingEvent) Is Nothing) Then
                RaiseEvent NotificacionesDetalleRowChanging(Me, New NotificacionesDetalleRowChangeEvent(CType(e.Row,NotificacionesDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.NotificacionesDetalleRowDeletedEvent) Is Nothing) Then
                RaiseEvent NotificacionesDetalleRowDeleted(Me, New NotificacionesDetalleRowChangeEvent(CType(e.Row,NotificacionesDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.NotificacionesDetalleRowDeletingEvent) Is Nothing) Then
                RaiseEvent NotificacionesDetalleRowDeleting(Me, New NotificacionesDetalleRowChangeEvent(CType(e.Row,NotificacionesDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveNotificacionesDetalleRow(ByVal row As NotificacionesDetalleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As FactorDataSet = New FactorDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "NotificacionesDetalleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SP_ConsultaAforosLiquidadosDataTable
        Inherits Global.System.Data.TypedTableBase(Of SP_ConsultaAforosLiquidadosRow)
        
        Private columncontrato As Global.System.Data.DataColumn
        
        Private columnimporte As Global.System.Data.DataColumn
        
        Private columnpago As Global.System.Data.DataColumn
        
        Private columnCuenta As Global.System.Data.DataColumn
        
        Private columnfolio As Global.System.Data.DataColumn
        
        Private columnmovto As Global.System.Data.DataColumn
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columncobranza As Global.System.Data.DataColumn
        
        Private columnpagomatriz As Global.System.Data.DataColumn
        
        Private columnfecpago As Global.System.Data.DataColumn
        
        Private columnMoneda As Global.System.Data.DataColumn
        
        Private columnuserid As Global.System.Data.DataColumn
        
        Private columnnumreccta As Global.System.Data.DataColumn
        
        Private columnidctabanco As Global.System.Data.DataColumn
        
        Private columnbenef As Global.System.Data.DataColumn
        
        Private columnproducto As Global.System.Data.DataColumn
        
        Private columnmone As Global.System.Data.DataColumn
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnidentidad As Global.System.Data.DataColumn
        
        Private columnaforo As Global.System.Data.DataColumn
        
        Private columndescto As Global.System.Data.DataColumn
        
        Private columnbonifica As Global.System.Data.DataColumn
        
        Private columncartera As Global.System.Data.DataColumn
        
        Private columnadeudos As Global.System.Data.DataColumn
        
        Private columnnumrec As Global.System.Data.DataColumn
        
        Private columnctabanco As Global.System.Data.DataColumn
        
        Private columnOrigen As Global.System.Data.DataColumn
        
        Private columncuenta1 As Global.System.Data.DataColumn
        
        Private columnshortname As Global.System.Data.DataColumn
        
        Private columnclabe As Global.System.Data.DataColumn
        
        Private columntimestart As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SP_ConsultaAforosLiquidados"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contratoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontrato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property importeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property folioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfolio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property movtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmovto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cobranzaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncobranza
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pagomatrizColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpagomatriz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fecpagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecpago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property useridColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuserid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property numrecctaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumreccta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idctabancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidctabanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property benefColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbenef
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property productoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property moneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property identidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidentidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property aforoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaforo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property desctoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property bonificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbonifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property carteraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncartera
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adeudosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadeudos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property numrecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumrec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ctabancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctabanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrigenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrigen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cuenta1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncuenta1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property shortnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnshortname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clabeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclabe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property timestartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntimestart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SP_ConsultaAforosLiquidadosRow
            Get
                Return CType(Me.Rows(index),SP_ConsultaAforosLiquidadosRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ConsultaAforosLiquidadosRowChanging As SP_ConsultaAforosLiquidadosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ConsultaAforosLiquidadosRowChanged As SP_ConsultaAforosLiquidadosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ConsultaAforosLiquidadosRowDeleting As SP_ConsultaAforosLiquidadosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ConsultaAforosLiquidadosRowDeleted As SP_ConsultaAforosLiquidadosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSP_ConsultaAforosLiquidadosRow(ByVal row As SP_ConsultaAforosLiquidadosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSP_ConsultaAforosLiquidadosRow( _
                    ByVal contrato As Integer,  _
                    ByVal importe As Decimal,  _
                    ByVal pago As Decimal,  _
                    ByVal Cuenta As String,  _
                    ByVal folio As Integer,  _
                    ByVal movto As String,  _
                    ByVal nombre As String,  _
                    ByVal cobranza As Integer,  _
                    ByVal pagomatriz As Boolean,  _
                    ByVal fecpago As Date,  _
                    ByVal Moneda As String,  _
                    ByVal userid As String,  _
                    ByVal numreccta As Integer,  _
                    ByVal idctabanco As Integer,  _
                    ByVal benef As String,  _
                    ByVal producto As Integer,  _
                    ByVal mone As Integer,  _
                    ByVal id As Integer,  _
                    ByVal identidad As Integer,  _
                    ByVal aforo As Decimal,  _
                    ByVal descto As Decimal,  _
                    ByVal bonifica As Decimal,  _
                    ByVal cartera As Decimal,  _
                    ByVal adeudos As Decimal,  _
                    ByVal numrec As Integer,  _
                    ByVal ctabanco As String,  _
                    ByVal Origen As String,  _
                    ByVal cuenta1 As String,  _
                    ByVal shortname As String,  _
                    ByVal clabe As String,  _
                    ByVal timestart As Date) As SP_ConsultaAforosLiquidadosRow
            Dim rowSP_ConsultaAforosLiquidadosRow As SP_ConsultaAforosLiquidadosRow = CType(Me.NewRow,SP_ConsultaAforosLiquidadosRow)
            Dim columnValuesArray() As Object = New Object() {contrato, importe, pago, Cuenta, folio, movto, nombre, cobranza, pagomatriz, fecpago, Moneda, userid, numreccta, idctabanco, benef, producto, mone, id, identidad, aforo, descto, bonifica, cartera, adeudos, numrec, ctabanco, Origen, cuenta1, shortname, clabe, timestart}
            rowSP_ConsultaAforosLiquidadosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSP_ConsultaAforosLiquidadosRow)
            Return rowSP_ConsultaAforosLiquidadosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SP_ConsultaAforosLiquidadosDataTable = CType(MyBase.Clone,SP_ConsultaAforosLiquidadosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SP_ConsultaAforosLiquidadosDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncontrato = MyBase.Columns("contrato")
            Me.columnimporte = MyBase.Columns("importe")
            Me.columnpago = MyBase.Columns("pago")
            Me.columnCuenta = MyBase.Columns("Cuenta")
            Me.columnfolio = MyBase.Columns("folio")
            Me.columnmovto = MyBase.Columns("movto")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columncobranza = MyBase.Columns("cobranza")
            Me.columnpagomatriz = MyBase.Columns("pagomatriz")
            Me.columnfecpago = MyBase.Columns("fecpago")
            Me.columnMoneda = MyBase.Columns("Moneda")
            Me.columnuserid = MyBase.Columns("userid")
            Me.columnnumreccta = MyBase.Columns("numreccta")
            Me.columnidctabanco = MyBase.Columns("idctabanco")
            Me.columnbenef = MyBase.Columns("benef")
            Me.columnproducto = MyBase.Columns("producto")
            Me.columnmone = MyBase.Columns("mone")
            Me.columnid = MyBase.Columns("id")
            Me.columnidentidad = MyBase.Columns("identidad")
            Me.columnaforo = MyBase.Columns("aforo")
            Me.columndescto = MyBase.Columns("descto")
            Me.columnbonifica = MyBase.Columns("bonifica")
            Me.columncartera = MyBase.Columns("cartera")
            Me.columnadeudos = MyBase.Columns("adeudos")
            Me.columnnumrec = MyBase.Columns("numrec")
            Me.columnctabanco = MyBase.Columns("ctabanco")
            Me.columnOrigen = MyBase.Columns("Origen")
            Me.columncuenta1 = MyBase.Columns("cuenta1")
            Me.columnshortname = MyBase.Columns("shortname")
            Me.columnclabe = MyBase.Columns("clabe")
            Me.columntimestart = MyBase.Columns("timestart")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columncontrato = New Global.System.Data.DataColumn("contrato", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontrato)
            Me.columnimporte = New Global.System.Data.DataColumn("importe", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimporte)
            Me.columnpago = New Global.System.Data.DataColumn("pago", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpago)
            Me.columnCuenta = New Global.System.Data.DataColumn("Cuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuenta)
            Me.columnfolio = New Global.System.Data.DataColumn("folio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfolio)
            Me.columnmovto = New Global.System.Data.DataColumn("movto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmovto)
            Me.columnnombre = New Global.System.Data.DataColumn("nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columncobranza = New Global.System.Data.DataColumn("cobranza", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncobranza)
            Me.columnpagomatriz = New Global.System.Data.DataColumn("pagomatriz", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpagomatriz)
            Me.columnfecpago = New Global.System.Data.DataColumn("fecpago", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecpago)
            Me.columnMoneda = New Global.System.Data.DataColumn("Moneda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMoneda)
            Me.columnuserid = New Global.System.Data.DataColumn("userid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuserid)
            Me.columnnumreccta = New Global.System.Data.DataColumn("numreccta", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumreccta)
            Me.columnidctabanco = New Global.System.Data.DataColumn("idctabanco", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidctabanco)
            Me.columnbenef = New Global.System.Data.DataColumn("benef", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbenef)
            Me.columnproducto = New Global.System.Data.DataColumn("producto", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducto)
            Me.columnmone = New Global.System.Data.DataColumn("mone", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmone)
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnidentidad = New Global.System.Data.DataColumn("identidad", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidentidad)
            Me.columnaforo = New Global.System.Data.DataColumn("aforo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaforo)
            Me.columndescto = New Global.System.Data.DataColumn("descto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescto)
            Me.columnbonifica = New Global.System.Data.DataColumn("bonifica", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbonifica)
            Me.columncartera = New Global.System.Data.DataColumn("cartera", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncartera)
            Me.columnadeudos = New Global.System.Data.DataColumn("adeudos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadeudos)
            Me.columnnumrec = New Global.System.Data.DataColumn("numrec", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumrec)
            Me.columnctabanco = New Global.System.Data.DataColumn("ctabanco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctabanco)
            Me.columnOrigen = New Global.System.Data.DataColumn("Origen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrigen)
            Me.columncuenta1 = New Global.System.Data.DataColumn("cuenta1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuenta1)
            Me.columnshortname = New Global.System.Data.DataColumn("shortname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnshortname)
            Me.columnclabe = New Global.System.Data.DataColumn("clabe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclabe)
            Me.columntimestart = New Global.System.Data.DataColumn("timestart", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntimestart)
            Me.columncontrato.ReadOnly = true
            Me.columnimporte.ReadOnly = true
            Me.columnpago.ReadOnly = true
            Me.columnCuenta.ReadOnly = true
            Me.columnCuenta.MaxLength = 15
            Me.columnfolio.ReadOnly = true
            Me.columnmovto.ReadOnly = true
            Me.columnmovto.MaxLength = 2
            Me.columnnombre.ReadOnly = true
            Me.columnnombre.MaxLength = 100
            Me.columncobranza.ReadOnly = true
            Me.columnpagomatriz.ReadOnly = true
            Me.columnfecpago.ReadOnly = true
            Me.columnMoneda.ReadOnly = true
            Me.columnMoneda.MaxLength = 4
            Me.columnuserid.ReadOnly = true
            Me.columnuserid.MaxLength = 15
            Me.columnnumreccta.ReadOnly = true
            Me.columnidctabanco.ReadOnly = true
            Me.columnbenef.ReadOnly = true
            Me.columnbenef.MaxLength = 100
            Me.columnproducto.ReadOnly = true
            Me.columnmone.ReadOnly = true
            Me.columnid.ReadOnly = true
            Me.columnidentidad.ReadOnly = true
            Me.columnaforo.ReadOnly = true
            Me.columndescto.ReadOnly = true
            Me.columnbonifica.ReadOnly = true
            Me.columncartera.ReadOnly = true
            Me.columnadeudos.ReadOnly = true
            Me.columnnumrec.ReadOnly = true
            Me.columnctabanco.ReadOnly = true
            Me.columnctabanco.MaxLength = 15
            Me.columnOrigen.ReadOnly = true
            Me.columnOrigen.MaxLength = 35
            Me.columncuenta1.ReadOnly = true
            Me.columncuenta1.MaxLength = 15
            Me.columnshortname.ReadOnly = true
            Me.columnshortname.MaxLength = 20
            Me.columnclabe.ReadOnly = true
            Me.columnclabe.MaxLength = 18
            Me.columntimestart.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSP_ConsultaAforosLiquidadosRow() As SP_ConsultaAforosLiquidadosRow
            Return CType(Me.NewRow,SP_ConsultaAforosLiquidadosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SP_ConsultaAforosLiquidadosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SP_ConsultaAforosLiquidadosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SP_ConsultaAforosLiquidadosRowChangedEvent) Is Nothing) Then
                RaiseEvent SP_ConsultaAforosLiquidadosRowChanged(Me, New SP_ConsultaAforosLiquidadosRowChangeEvent(CType(e.Row,SP_ConsultaAforosLiquidadosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SP_ConsultaAforosLiquidadosRowChangingEvent) Is Nothing) Then
                RaiseEvent SP_ConsultaAforosLiquidadosRowChanging(Me, New SP_ConsultaAforosLiquidadosRowChangeEvent(CType(e.Row,SP_ConsultaAforosLiquidadosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SP_ConsultaAforosLiquidadosRowDeletedEvent) Is Nothing) Then
                RaiseEvent SP_ConsultaAforosLiquidadosRowDeleted(Me, New SP_ConsultaAforosLiquidadosRowChangeEvent(CType(e.Row,SP_ConsultaAforosLiquidadosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SP_ConsultaAforosLiquidadosRowDeletingEvent) Is Nothing) Then
                RaiseEvent SP_ConsultaAforosLiquidadosRowDeleting(Me, New SP_ConsultaAforosLiquidadosRowChangeEvent(CType(e.Row,SP_ConsultaAforosLiquidadosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSP_ConsultaAforosLiquidadosRow(ByVal row As SP_ConsultaAforosLiquidadosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As FactorDataSet = New FactorDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SP_ConsultaAforosLiquidadosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class detalleDataTable
        Inherits Global.System.Data.TypedTableBase(Of detalleRow)
        
        Private columniddetalle As Global.System.Data.DataColumn
        
        Private columnfolio As Global.System.Data.DataColumn
        
        Private columncontrato As Global.System.Data.DataColumn
        
        Private columndeudor As Global.System.Data.DataColumn
        
        Private columndocto As Global.System.Data.DataColumn
        
        Private columnpagare As Global.System.Data.DataColumn
        
        Private columnreferencia As Global.System.Data.DataColumn
        
        Private columnfec_vence As Global.System.Data.DataColumn
        
        Private columnimporte As Global.System.Data.DataColumn
        
        Private columntinter As Global.System.Data.DataColumn
        
        Private columnivainteres As Global.System.Data.DataColumn
        
        Private columnmonto As Global.System.Data.DataColumn
        
        Private columndescto As Global.System.Data.DataColumn
        
        Private columnhono As Global.System.Data.DataColumn
        
        Private columniva As Global.System.Data.DataColumn
        
        Private columnvoid As Global.System.Data.DataColumn
        
        Private columnplazo As Global.System.Data.DataColumn
        
        Private columnint_diario As Global.System.Data.DataColumn
        
        Private columnctetinter As Global.System.Data.DataColumn
        
        Private columnctehono As Global.System.Data.DataColumn
        
        Private columncteiva As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "detalle"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property iddetalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columniddetalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property folioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfolio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contratoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontrato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deudorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndeudor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property doctoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndocto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pagareColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpagare
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property referenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreferencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fec_venceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfec_vence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property importeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tinterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntinter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ivainteresColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnivainteres
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property montoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property desctoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property honoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columniva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property voidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvoid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property plazoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplazo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property int_diarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnint_diario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ctetinterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctetinter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ctehonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctehono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cteivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncteiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As detalleRow
            Get
                Return CType(Me.Rows(index),detalleRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event detalleRowChanging As detalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event detalleRowChanged As detalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event detalleRowDeleting As detalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event detalleRowDeleted As detalleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdddetalleRow(ByVal row As detalleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdddetalleRow( _
                    ByVal folio As Integer,  _
                    ByVal contrato As Integer,  _
                    ByVal deudor As Integer,  _
                    ByVal docto As String,  _
                    ByVal pagare As String,  _
                    ByVal referencia As String,  _
                    ByVal fec_vence As Date,  _
                    ByVal importe As Decimal,  _
                    ByVal tinter As Decimal,  _
                    ByVal ivainteres As Decimal,  _
                    ByVal monto As Decimal,  _
                    ByVal descto As Decimal,  _
                    ByVal hono As Decimal,  _
                    ByVal iva As Decimal,  _
                    ByVal void As Boolean,  _
                    ByVal plazo As Decimal,  _
                    ByVal int_diario As Decimal,  _
                    ByVal ctetinter As Decimal,  _
                    ByVal ctehono As Decimal,  _
                    ByVal cteiva As Decimal) As detalleRow
            Dim rowdetalleRow As detalleRow = CType(Me.NewRow,detalleRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, folio, contrato, deudor, docto, pagare, referencia, fec_vence, importe, tinter, ivainteres, monto, descto, hono, iva, void, plazo, int_diario, ctetinter, ctehono, cteiva}
            rowdetalleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdetalleRow)
            Return rowdetalleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByiddetalle(ByVal iddetalle As Decimal) As detalleRow
            Return CType(Me.Rows.Find(New Object() {iddetalle}),detalleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As detalleDataTable = CType(MyBase.Clone,detalleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New detalleDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columniddetalle = MyBase.Columns("iddetalle")
            Me.columnfolio = MyBase.Columns("folio")
            Me.columncontrato = MyBase.Columns("contrato")
            Me.columndeudor = MyBase.Columns("deudor")
            Me.columndocto = MyBase.Columns("docto")
            Me.columnpagare = MyBase.Columns("pagare")
            Me.columnreferencia = MyBase.Columns("referencia")
            Me.columnfec_vence = MyBase.Columns("fec_vence")
            Me.columnimporte = MyBase.Columns("importe")
            Me.columntinter = MyBase.Columns("tinter")
            Me.columnivainteres = MyBase.Columns("ivainteres")
            Me.columnmonto = MyBase.Columns("monto")
            Me.columndescto = MyBase.Columns("descto")
            Me.columnhono = MyBase.Columns("hono")
            Me.columniva = MyBase.Columns("iva")
            Me.columnvoid = MyBase.Columns("void")
            Me.columnplazo = MyBase.Columns("plazo")
            Me.columnint_diario = MyBase.Columns("int_diario")
            Me.columnctetinter = MyBase.Columns("ctetinter")
            Me.columnctehono = MyBase.Columns("ctehono")
            Me.columncteiva = MyBase.Columns("cteiva")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columniddetalle = New Global.System.Data.DataColumn("iddetalle", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columniddetalle)
            Me.columnfolio = New Global.System.Data.DataColumn("folio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfolio)
            Me.columncontrato = New Global.System.Data.DataColumn("contrato", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontrato)
            Me.columndeudor = New Global.System.Data.DataColumn("deudor", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeudor)
            Me.columndocto = New Global.System.Data.DataColumn("docto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndocto)
            Me.columnpagare = New Global.System.Data.DataColumn("pagare", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpagare)
            Me.columnreferencia = New Global.System.Data.DataColumn("referencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreferencia)
            Me.columnfec_vence = New Global.System.Data.DataColumn("fec_vence", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfec_vence)
            Me.columnimporte = New Global.System.Data.DataColumn("importe", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimporte)
            Me.columntinter = New Global.System.Data.DataColumn("tinter", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntinter)
            Me.columnivainteres = New Global.System.Data.DataColumn("ivainteres", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnivainteres)
            Me.columnmonto = New Global.System.Data.DataColumn("monto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmonto)
            Me.columndescto = New Global.System.Data.DataColumn("descto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescto)
            Me.columnhono = New Global.System.Data.DataColumn("hono", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhono)
            Me.columniva = New Global.System.Data.DataColumn("iva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columniva)
            Me.columnvoid = New Global.System.Data.DataColumn("void", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvoid)
            Me.columnplazo = New Global.System.Data.DataColumn("plazo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplazo)
            Me.columnint_diario = New Global.System.Data.DataColumn("int_diario", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnint_diario)
            Me.columnctetinter = New Global.System.Data.DataColumn("ctetinter", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctetinter)
            Me.columnctehono = New Global.System.Data.DataColumn("ctehono", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctehono)
            Me.columncteiva = New Global.System.Data.DataColumn("cteiva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncteiva)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columniddetalle}, true))
            Me.columniddetalle.AutoIncrement = true
            Me.columniddetalle.AutoIncrementSeed = -1
            Me.columniddetalle.AutoIncrementStep = -1
            Me.columniddetalle.AllowDBNull = false
            Me.columniddetalle.ReadOnly = true
            Me.columniddetalle.Unique = true
            Me.columndocto.MaxLength = 20
            Me.columnpagare.MaxLength = 20
            Me.columnreferencia.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewdetalleRow() As detalleRow
            Return CType(Me.NewRow,detalleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New detalleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(detalleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.detalleRowChangedEvent) Is Nothing) Then
                RaiseEvent detalleRowChanged(Me, New detalleRowChangeEvent(CType(e.Row,detalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.detalleRowChangingEvent) Is Nothing) Then
                RaiseEvent detalleRowChanging(Me, New detalleRowChangeEvent(CType(e.Row,detalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.detalleRowDeletedEvent) Is Nothing) Then
                RaiseEvent detalleRowDeleted(Me, New detalleRowChangeEvent(CType(e.Row,detalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.detalleRowDeletingEvent) Is Nothing) Then
                RaiseEvent detalleRowDeleting(Me, New detalleRowChangeEvent(CType(e.Row,detalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovedetalleRow(ByVal row As detalleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As FactorDataSet = New FactorDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "detalleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SP_InformaCobrosDataTable
        Inherits Global.System.Data.TypedTableBase(Of SP_InformaCobrosRow)
        
        Private columnfecha As Global.System.Data.DataColumn
        
        Private columncontrato As Global.System.Data.DataColumn
        
        Private columndeudor As Global.System.Data.DataColumn
        
        Private columncesion As Global.System.Data.DataColumn
        
        Private columndocto As Global.System.Data.DataColumn
        
        Private columnimporte As Global.System.Data.DataColumn
        
        Private columndescto As Global.System.Data.DataColumn
        
        Private columnbonifica As Global.System.Data.DataColumn
        
        Private columnneto As Global.System.Data.DataColumn
        
        Private columncobranza As Global.System.Data.DataColumn
        
        Private columnsafectado As Global.System.Data.DataColumn
        
        Private columnscv As Global.System.Data.DataColumn
        
        Private columnnombredeudor As Global.System.Data.DataColumn
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columnporc_anti As Global.System.Data.DataColumn
        
        Private columndescrip As Global.System.Data.DataColumn
        
        Private columnmonedastr As Global.System.Data.DataColumn
        
        Private columncobrado As Global.System.Data.DataColumn
        
        Private columnaforo As Global.System.Data.DataColumn
        
        Private columnpago As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SP_InformaCobros"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contratoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontrato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deudorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndeudor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cesionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncesion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property doctoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndocto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property importeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property desctoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property bonificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbonifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property netoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnneto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cobranzaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncobranza
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property safectadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsafectado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property scvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnscv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nombredeudorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombredeudor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property porc_antiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnporc_anti
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property descripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property monedastrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmonedastr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cobradoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncobrado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property aforoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaforo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SP_InformaCobrosRow
            Get
                Return CType(Me.Rows(index),SP_InformaCobrosRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_InformaCobrosRowChanging As SP_InformaCobrosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_InformaCobrosRowChanged As SP_InformaCobrosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_InformaCobrosRowDeleting As SP_InformaCobrosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_InformaCobrosRowDeleted As SP_InformaCobrosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSP_InformaCobrosRow(ByVal row As SP_InformaCobrosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSP_InformaCobrosRow( _
                    ByVal fecha As String,  _
                    ByVal contrato As String,  _
                    ByVal deudor As String,  _
                    ByVal cesion As String,  _
                    ByVal docto As String,  _
                    ByVal importe As String,  _
                    ByVal descto As String,  _
                    ByVal bonifica As String,  _
                    ByVal neto As String,  _
                    ByVal cobranza As String,  _
                    ByVal safectado As String,  _
                    ByVal scv As String,  _
                    ByVal nombredeudor As String,  _
                    ByVal nombre As String,  _
                    ByVal porc_anti As String,  _
                    ByVal descrip As String,  _
                    ByVal monedastr As String,  _
                    ByVal cobrado As String,  _
                    ByVal aforo As String,  _
                    ByVal pago As String) As SP_InformaCobrosRow
            Dim rowSP_InformaCobrosRow As SP_InformaCobrosRow = CType(Me.NewRow,SP_InformaCobrosRow)
            Dim columnValuesArray() As Object = New Object() {fecha, contrato, deudor, cesion, docto, importe, descto, bonifica, neto, cobranza, safectado, scv, nombredeudor, nombre, porc_anti, descrip, monedastr, cobrado, aforo, pago}
            rowSP_InformaCobrosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSP_InformaCobrosRow)
            Return rowSP_InformaCobrosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SP_InformaCobrosDataTable = CType(MyBase.Clone,SP_InformaCobrosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SP_InformaCobrosDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnfecha = MyBase.Columns("fecha")
            Me.columncontrato = MyBase.Columns("contrato")
            Me.columndeudor = MyBase.Columns("deudor")
            Me.columncesion = MyBase.Columns("cesion")
            Me.columndocto = MyBase.Columns("docto")
            Me.columnimporte = MyBase.Columns("importe")
            Me.columndescto = MyBase.Columns("descto")
            Me.columnbonifica = MyBase.Columns("bonifica")
            Me.columnneto = MyBase.Columns("neto")
            Me.columncobranza = MyBase.Columns("cobranza")
            Me.columnsafectado = MyBase.Columns("safectado")
            Me.columnscv = MyBase.Columns("scv")
            Me.columnnombredeudor = MyBase.Columns("nombredeudor")
            Me.columnnombre = MyBase.Columns("Nombre")
            Me.columnporc_anti = MyBase.Columns("porc_anti")
            Me.columndescrip = MyBase.Columns("descrip")
            Me.columnmonedastr = MyBase.Columns("monedastr")
            Me.columncobrado = MyBase.Columns("cobrado")
            Me.columnaforo = MyBase.Columns("aforo")
            Me.columnpago = MyBase.Columns("pago")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnfecha = New Global.System.Data.DataColumn("fecha", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha)
            Me.columncontrato = New Global.System.Data.DataColumn("contrato", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontrato)
            Me.columndeudor = New Global.System.Data.DataColumn("deudor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeudor)
            Me.columncesion = New Global.System.Data.DataColumn("cesion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncesion)
            Me.columndocto = New Global.System.Data.DataColumn("docto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndocto)
            Me.columnimporte = New Global.System.Data.DataColumn("importe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimporte)
            Me.columndescto = New Global.System.Data.DataColumn("descto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescto)
            Me.columnbonifica = New Global.System.Data.DataColumn("bonifica", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbonifica)
            Me.columnneto = New Global.System.Data.DataColumn("neto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnneto)
            Me.columncobranza = New Global.System.Data.DataColumn("cobranza", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncobranza)
            Me.columnsafectado = New Global.System.Data.DataColumn("safectado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsafectado)
            Me.columnscv = New Global.System.Data.DataColumn("scv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnscv)
            Me.columnnombredeudor = New Global.System.Data.DataColumn("nombredeudor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombredeudor)
            Me.columnnombre = New Global.System.Data.DataColumn("Nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnnombre.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "nombre")
            Me.columnnombre.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "nombreColumn")
            Me.columnnombre.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnnombre")
            Me.columnnombre.ExtendedProperties.Add("Generator_UserColumnName", "Nombre")
            MyBase.Columns.Add(Me.columnnombre)
            Me.columnporc_anti = New Global.System.Data.DataColumn("porc_anti", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnporc_anti)
            Me.columndescrip = New Global.System.Data.DataColumn("descrip", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescrip)
            Me.columnmonedastr = New Global.System.Data.DataColumn("monedastr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmonedastr)
            Me.columncobrado = New Global.System.Data.DataColumn("cobrado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncobrado)
            Me.columnaforo = New Global.System.Data.DataColumn("aforo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaforo)
            Me.columnpago = New Global.System.Data.DataColumn("pago", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpago)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSP_InformaCobrosRow() As SP_InformaCobrosRow
            Return CType(Me.NewRow,SP_InformaCobrosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SP_InformaCobrosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SP_InformaCobrosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SP_InformaCobrosRowChangedEvent) Is Nothing) Then
                RaiseEvent SP_InformaCobrosRowChanged(Me, New SP_InformaCobrosRowChangeEvent(CType(e.Row,SP_InformaCobrosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SP_InformaCobrosRowChangingEvent) Is Nothing) Then
                RaiseEvent SP_InformaCobrosRowChanging(Me, New SP_InformaCobrosRowChangeEvent(CType(e.Row,SP_InformaCobrosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SP_InformaCobrosRowDeletedEvent) Is Nothing) Then
                RaiseEvent SP_InformaCobrosRowDeleted(Me, New SP_InformaCobrosRowChangeEvent(CType(e.Row,SP_InformaCobrosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SP_InformaCobrosRowDeletingEvent) Is Nothing) Then
                RaiseEvent SP_InformaCobrosRowDeleting(Me, New SP_InformaCobrosRowChangeEvent(CType(e.Row,SP_InformaCobrosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSP_InformaCobrosRow(ByVal row As SP_InformaCobrosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As FactorDataSet = New FactorDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SP_InformaCobrosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ReporteadeudosDataTable
        Inherits Global.System.Data.TypedTableBase(Of ReporteadeudosRow)
        
        Private columncontrato As Global.System.Data.DataColumn
        
        Private columnAdeudo As Global.System.Data.DataColumn
        
        Private columndocto As Global.System.Data.DataColumn
        
        Private columntipo As Global.System.Data.DataColumn
        
        Private columnserie As Global.System.Data.DataColumn
        
        Private columnNombre As Global.System.Data.DataColumn
        
        Private columnfec_alta As Global.System.Data.DataColumn
        
        Private columnmonto As Global.System.Data.DataColumn
        
        Private columnsaldo As Global.System.Data.DataColumn
        
        Private columnmoneda As Global.System.Data.DataColumn
        
        Private columnmonedastr As Global.System.Data.DataColumn
        
        Private columnidadeudo As Global.System.Data.DataColumn
        
        Private columniva As Global.System.Data.DataColumn
        
        Private columnimpbase As Global.System.Data.DataColumn
        
        Private columnimpiva As Global.System.Data.DataColumn
        
        Private columnsalbase As Global.System.Data.DataColumn
        
        Private columnsaliva As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Reporteadeudos"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contratoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontrato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AdeudoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdeudo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property doctoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndocto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property serieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnserie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fec_altaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfec_alta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property montoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property saldoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property monedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property monedastrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmonedastr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idadeudoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidadeudo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columniva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property impbaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimpbase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property impivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimpiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property salbaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsalbase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property salivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaliva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ReporteadeudosRow
            Get
                Return CType(Me.Rows(index),ReporteadeudosRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReporteadeudosRowChanging As ReporteadeudosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReporteadeudosRowChanged As ReporteadeudosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReporteadeudosRowDeleting As ReporteadeudosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReporteadeudosRowDeleted As ReporteadeudosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddReporteadeudosRow(ByVal row As ReporteadeudosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddReporteadeudosRow( _
                    ByVal contrato As String,  _
                    ByVal Adeudo As String,  _
                    ByVal docto As String,  _
                    ByVal tipo As String,  _
                    ByVal serie As String,  _
                    ByVal Nombre As String,  _
                    ByVal fec_alta As String,  _
                    ByVal monto As String,  _
                    ByVal saldo As String,  _
                    ByVal moneda As String,  _
                    ByVal monedastr As String,  _
                    ByVal idadeudo As String,  _
                    ByVal iva As String,  _
                    ByVal impbase As String,  _
                    ByVal impiva As String,  _
                    ByVal salbase As String,  _
                    ByVal saliva As String) As ReporteadeudosRow
            Dim rowReporteadeudosRow As ReporteadeudosRow = CType(Me.NewRow,ReporteadeudosRow)
            Dim columnValuesArray() As Object = New Object() {contrato, Adeudo, docto, tipo, serie, Nombre, fec_alta, monto, saldo, moneda, monedastr, idadeudo, iva, impbase, impiva, salbase, saliva}
            rowReporteadeudosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowReporteadeudosRow)
            Return rowReporteadeudosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ReporteadeudosDataTable = CType(MyBase.Clone,ReporteadeudosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ReporteadeudosDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncontrato = MyBase.Columns("contrato")
            Me.columnAdeudo = MyBase.Columns("Adeudo")
            Me.columndocto = MyBase.Columns("docto")
            Me.columntipo = MyBase.Columns("tipo")
            Me.columnserie = MyBase.Columns("serie")
            Me.columnNombre = MyBase.Columns("Nombre")
            Me.columnfec_alta = MyBase.Columns("fec_alta")
            Me.columnmonto = MyBase.Columns("monto")
            Me.columnsaldo = MyBase.Columns("saldo")
            Me.columnmoneda = MyBase.Columns("moneda")
            Me.columnmonedastr = MyBase.Columns("monedastr")
            Me.columnidadeudo = MyBase.Columns("idadeudo")
            Me.columniva = MyBase.Columns("iva")
            Me.columnimpbase = MyBase.Columns("impbase")
            Me.columnimpiva = MyBase.Columns("impiva")
            Me.columnsalbase = MyBase.Columns("salbase")
            Me.columnsaliva = MyBase.Columns("saliva")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columncontrato = New Global.System.Data.DataColumn("contrato", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontrato)
            Me.columnAdeudo = New Global.System.Data.DataColumn("Adeudo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdeudo)
            Me.columndocto = New Global.System.Data.DataColumn("docto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndocto)
            Me.columntipo = New Global.System.Data.DataColumn("tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo)
            Me.columnserie = New Global.System.Data.DataColumn("serie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnserie)
            Me.columnNombre = New Global.System.Data.DataColumn("Nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombre)
            Me.columnfec_alta = New Global.System.Data.DataColumn("fec_alta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfec_alta)
            Me.columnmonto = New Global.System.Data.DataColumn("monto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmonto)
            Me.columnsaldo = New Global.System.Data.DataColumn("saldo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo)
            Me.columnmoneda = New Global.System.Data.DataColumn("moneda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmoneda)
            Me.columnmonedastr = New Global.System.Data.DataColumn("monedastr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmonedastr)
            Me.columnidadeudo = New Global.System.Data.DataColumn("idadeudo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidadeudo)
            Me.columniva = New Global.System.Data.DataColumn("iva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columniva)
            Me.columnimpbase = New Global.System.Data.DataColumn("impbase", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimpbase)
            Me.columnimpiva = New Global.System.Data.DataColumn("impiva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimpiva)
            Me.columnsalbase = New Global.System.Data.DataColumn("salbase", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsalbase)
            Me.columnsaliva = New Global.System.Data.DataColumn("saliva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaliva)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewReporteadeudosRow() As ReporteadeudosRow
            Return CType(Me.NewRow,ReporteadeudosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ReporteadeudosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ReporteadeudosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ReporteadeudosRowChangedEvent) Is Nothing) Then
                RaiseEvent ReporteadeudosRowChanged(Me, New ReporteadeudosRowChangeEvent(CType(e.Row,ReporteadeudosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ReporteadeudosRowChangingEvent) Is Nothing) Then
                RaiseEvent ReporteadeudosRowChanging(Me, New ReporteadeudosRowChangeEvent(CType(e.Row,ReporteadeudosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ReporteadeudosRowDeletedEvent) Is Nothing) Then
                RaiseEvent ReporteadeudosRowDeleted(Me, New ReporteadeudosRowChangeEvent(CType(e.Row,ReporteadeudosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ReporteadeudosRowDeletingEvent) Is Nothing) Then
                RaiseEvent ReporteadeudosRowDeleting(Me, New ReporteadeudosRowChangeEvent(CType(e.Row,ReporteadeudosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveReporteadeudosRow(ByVal row As ReporteadeudosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As FactorDataSet = New FactorDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ReporteadeudosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AnexoDataTable
        Inherits Global.System.Data.TypedTableBase(Of AnexoRow)
        
        Private columndeudor As Global.System.Data.DataColumn
        
        Private columncontrato As Global.System.Data.DataColumn
        
        Private columnproducto As Global.System.Data.DataColumn
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columndeuname As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Anexo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deudorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndeudor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contratoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontrato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property productoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deunameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndeuname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AnexoRow
            Get
                Return CType(Me.Rows(index),AnexoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AnexoRowChanging As AnexoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AnexoRowChanged As AnexoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AnexoRowDeleting As AnexoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AnexoRowDeleted As AnexoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddAnexoRow(ByVal row As AnexoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddAnexoRow(ByVal deudor As String, ByVal contrato As String, ByVal producto As String, ByVal nombre As String, ByVal deuname As String) As AnexoRow
            Dim rowAnexoRow As AnexoRow = CType(Me.NewRow,AnexoRow)
            Dim columnValuesArray() As Object = New Object() {deudor, contrato, producto, nombre, deuname}
            rowAnexoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAnexoRow)
            Return rowAnexoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AnexoDataTable = CType(MyBase.Clone,AnexoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AnexoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columndeudor = MyBase.Columns("deudor")
            Me.columncontrato = MyBase.Columns("contrato")
            Me.columnproducto = MyBase.Columns("producto")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columndeuname = MyBase.Columns("deuname")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columndeudor = New Global.System.Data.DataColumn("deudor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeudor)
            Me.columncontrato = New Global.System.Data.DataColumn("contrato", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontrato)
            Me.columnproducto = New Global.System.Data.DataColumn("producto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducto)
            Me.columnnombre = New Global.System.Data.DataColumn("nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columndeuname = New Global.System.Data.DataColumn("deuname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeuname)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewAnexoRow() As AnexoRow
            Return CType(Me.NewRow,AnexoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AnexoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AnexoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AnexoRowChangedEvent) Is Nothing) Then
                RaiseEvent AnexoRowChanged(Me, New AnexoRowChangeEvent(CType(e.Row,AnexoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AnexoRowChangingEvent) Is Nothing) Then
                RaiseEvent AnexoRowChanging(Me, New AnexoRowChangeEvent(CType(e.Row,AnexoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AnexoRowDeletedEvent) Is Nothing) Then
                RaiseEvent AnexoRowDeleted(Me, New AnexoRowChangeEvent(CType(e.Row,AnexoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AnexoRowDeletingEvent) Is Nothing) Then
                RaiseEvent AnexoRowDeleting(Me, New AnexoRowChangeEvent(CType(e.Row,AnexoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveAnexoRow(ByVal row As AnexoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As FactorDataSet = New FactorDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AnexoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class usersregsDataTable
        Inherits Global.System.Data.TypedTableBase(Of usersregsRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnidentidad As Global.System.Data.DataColumn
        
        Private columnidentidadname As Global.System.Data.DataColumn
        
        Private columnusername As Global.System.Data.DataColumn
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columnemail As Global.System.Data.DataColumn
        
        Private columnperfil As Global.System.Data.DataColumn
        
        Private columnfec_alta As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Usersregs"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property identidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidentidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property identidadnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidentidadname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property usernameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnusername
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property perfilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnperfil
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fec_altaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfec_alta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As usersregsRow
            Get
                Return CType(Me.Rows(index),usersregsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event usersregsRowChanging As usersregsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event usersregsRowChanged As usersregsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event usersregsRowDeleting As usersregsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event usersregsRowDeleted As usersregsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddusersregsRow(ByVal row As usersregsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddusersregsRow(ByVal id As String, ByVal identidad As String, ByVal identidadname As String, ByVal username As String, ByVal nombre As String, ByVal email As String, ByVal perfil As String, ByVal fec_alta As String) As usersregsRow
            Dim rowusersregsRow As usersregsRow = CType(Me.NewRow,usersregsRow)
            Dim columnValuesArray() As Object = New Object() {id, identidad, identidadname, username, nombre, email, perfil, fec_alta}
            rowusersregsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowusersregsRow)
            Return rowusersregsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As usersregsDataTable = CType(MyBase.Clone,usersregsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New usersregsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnidentidad = MyBase.Columns("identidad")
            Me.columnidentidadname = MyBase.Columns("identidadname")
            Me.columnusername = MyBase.Columns("username")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columnemail = MyBase.Columns("email")
            Me.columnperfil = MyBase.Columns("perfil")
            Me.columnfec_alta = MyBase.Columns("fec_alta")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnidentidad = New Global.System.Data.DataColumn("identidad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidentidad)
            Me.columnidentidadname = New Global.System.Data.DataColumn("identidadname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidentidadname)
            Me.columnusername = New Global.System.Data.DataColumn("username", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnusername)
            Me.columnnombre = New Global.System.Data.DataColumn("nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columnemail = New Global.System.Data.DataColumn("email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail)
            Me.columnperfil = New Global.System.Data.DataColumn("perfil", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnperfil)
            Me.columnfec_alta = New Global.System.Data.DataColumn("fec_alta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfec_alta)
            Me.ExtendedProperties.Add("Generator_RowClassName", "usersregsRow")
            Me.ExtendedProperties.Add("Generator_RowEvArgName", "usersregsRowChangeEvent")
            Me.ExtendedProperties.Add("Generator_RowEvHandlerName", "usersregsRowChangeEventHandler")
            Me.ExtendedProperties.Add("Generator_TableClassName", "usersregsDataTable")
            Me.ExtendedProperties.Add("Generator_TablePropName", "usersregs")
            Me.ExtendedProperties.Add("Generator_TableVarName", "tableusersregs")
            Me.ExtendedProperties.Add("Generator_UserTableName", "Usersregs")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewusersregsRow() As usersregsRow
            Return CType(Me.NewRow,usersregsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New usersregsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(usersregsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.usersregsRowChangedEvent) Is Nothing) Then
                RaiseEvent usersregsRowChanged(Me, New usersregsRowChangeEvent(CType(e.Row,usersregsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.usersregsRowChangingEvent) Is Nothing) Then
                RaiseEvent usersregsRowChanging(Me, New usersregsRowChangeEvent(CType(e.Row,usersregsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.usersregsRowDeletedEvent) Is Nothing) Then
                RaiseEvent usersregsRowDeleted(Me, New usersregsRowChangeEvent(CType(e.Row,usersregsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.usersregsRowDeletingEvent) Is Nothing) Then
                RaiseEvent usersregsRowDeleting(Me, New usersregsRowChangeEvent(CType(e.Row,usersregsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveusersregsRow(ByVal row As usersregsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As FactorDataSet = New FactorDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "usersregsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RebatemensualDataTable
        Inherits Global.System.Data.TypedTableBase(Of RebatemensualRow)
        
        Private columncontrato As Global.System.Data.DataColumn
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columnproveedor As Global.System.Data.DataColumn
        
        Private columndocto As Global.System.Data.DataColumn
        
        Private columncesion As Global.System.Data.DataColumn
        
        Private columnreferencia As Global.System.Data.DataColumn
        
        Private columnmonto As Global.System.Data.DataColumn
        
        Private columnplazo As Global.System.Data.DataColumn
        
        Private columnfec_alta As Global.System.Data.DataColumn
        
        Private columnfec_vence As Global.System.Data.DataColumn
        
    Private columndeudor As Global.System.Data.DataColumn

    Private columntasaoper As Global.System.Data.DataColumn

    Private columnrebatepts As Global.System.Data.DataColumn

    Private columninteres As Global.System.Data.DataColumn

    Private columnintbxmas As Global.System.Data.DataColumn

    Private columnrebate As Global.System.Data.DataColumn

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
      MyBase.New()
      Me.TableName = "Rebatemensual"
      Me.BeginInit()
      Me.InitClass()
      Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub New(ByVal table As Global.System.Data.DataTable)
      MyBase.New()
      Me.TableName = table.TableName
      If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
        Me.CaseSensitive = table.CaseSensitive
      End If
      If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
        Me.Locale = table.Locale
      End If
      If (table.Namespace <> table.DataSet.Namespace) Then
        Me.Namespace = table.Namespace
      End If
      Me.Prefix = table.Prefix
      Me.MinimumCapacity = table.MinimumCapacity
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
      MyBase.New(info, context)
      Me.InitVars()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property contratoColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columncontrato
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnnombre
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property proveedorColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnproveedor
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property doctoColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columndocto
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property cesionColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columncesion
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property referenciaColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnreferencia
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property montoColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnmonto
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property plazoColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnplazo
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property fec_altaColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnfec_alta
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property fec_venceColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnfec_vence
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property deudorColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columndeudor
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property tasaoperColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columntasaoper
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property rebateptsColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnrebatepts
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property interesColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columninteres
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property intbxmasColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnintbxmas
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property rebateColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnrebate
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False)> _
    Public ReadOnly Property Count() As Integer
      Get
        Return Me.Rows.Count
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Default Public ReadOnly Property Item(ByVal index As Integer) As RebatemensualRow
      Get
        Return CType(Me.Rows(index), RebatemensualRow)
      End Get
    End Property

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Event RebatemensualRowChanging As RebatemensualRowChangeEventHandler

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Event RebatemensualRowChanged As RebatemensualRowChangeEventHandler

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Event RebatemensualRowDeleting As RebatemensualRowChangeEventHandler

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Event RebatemensualRowDeleted As RebatemensualRowChangeEventHandler

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overloads Sub AddRebatemensualRow(ByVal row As RebatemensualRow)
      Me.Rows.Add(row)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overloads Function AddRebatemensualRow( _
                    ByVal contrato As String, _
                    ByVal nombre As String, _
                    ByVal proveedor As String, _
                    ByVal docto As String, _
                    ByVal cesion As String, _
                    ByVal referencia As String, _
                    ByVal monto As String, _
                    ByVal plazo As String, _
                    ByVal fec_alta As String, _
                    ByVal fec_vence As String, _
                    ByVal deudor As String, _
                    ByVal tasaoper As String, _
                    ByVal rebatepts As String, _
                    ByVal interes As String, _
                    ByVal intbxmas As String, _
                    ByVal rebate As String) As RebatemensualRow
      Dim rowRebatemensualRow As RebatemensualRow = CType(Me.NewRow, RebatemensualRow)
      Dim columnValuesArray() As Object = New Object() {contrato, nombre, proveedor, docto, cesion, referencia, monto, plazo, fec_alta, fec_vence, deudor, tasaoper, rebatepts, interes, intbxmas, rebate}
      rowRebatemensualRow.ItemArray = columnValuesArray
      Me.Rows.Add(rowRebatemensualRow)
      Return rowRebatemensualRow
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataTable
      Dim cln As RebatemensualDataTable = CType(MyBase.Clone, RebatemensualDataTable)
      cln.InitVars()
      Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
      Return New RebatemensualDataTable()
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub InitVars()
      Me.columncontrato = MyBase.Columns("contrato")
      Me.columnnombre = MyBase.Columns("nombre")
      Me.columnproveedor = MyBase.Columns("proveedor")
      Me.columndocto = MyBase.Columns("docto")
      Me.columncesion = MyBase.Columns("cesion")
      Me.columnreferencia = MyBase.Columns("referencia")
      Me.columnmonto = MyBase.Columns("monto")
      Me.columnplazo = MyBase.Columns("plazo")
      Me.columnfec_alta = MyBase.Columns("fec_alta")
      Me.columnfec_vence = MyBase.Columns("fec_vence")
      Me.columndeudor = MyBase.Columns("deudor")
      Me.columntasaoper = MyBase.Columns("tasaoper")
      Me.columnrebatepts = MyBase.Columns("rebatepts")
      Me.columninteres = MyBase.Columns("interes")
      Me.columnintbxmas = MyBase.Columns("intbxmas")
      Me.columnrebate = MyBase.Columns("rebate")
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
      Me.columncontrato = New Global.System.Data.DataColumn("contrato", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columncontrato)
      Me.columnnombre = New Global.System.Data.DataColumn("nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnnombre)
      Me.columnproveedor = New Global.System.Data.DataColumn("proveedor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnproveedor)
      Me.columndocto = New Global.System.Data.DataColumn("docto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columndocto)
      Me.columncesion = New Global.System.Data.DataColumn("cesion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columncesion)
      Me.columnreferencia = New Global.System.Data.DataColumn("referencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnreferencia)
      Me.columnmonto = New Global.System.Data.DataColumn("monto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnmonto)
      Me.columnplazo = New Global.System.Data.DataColumn("plazo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnplazo)
      Me.columnfec_alta = New Global.System.Data.DataColumn("fec_alta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnfec_alta)
      Me.columnfec_vence = New Global.System.Data.DataColumn("fec_vence", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnfec_vence)
      Me.columndeudor = New Global.System.Data.DataColumn("deudor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columndeudor)
      Me.columntasaoper = New Global.System.Data.DataColumn("tasaoper", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columntasaoper)
      Me.columnrebatepts = New Global.System.Data.DataColumn("rebatepts", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnrebatepts)
      Me.columninteres = New Global.System.Data.DataColumn("interes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columninteres)
      Me.columnintbxmas = New Global.System.Data.DataColumn("intbxmas", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnintbxmas)
      Me.columnrebate = New Global.System.Data.DataColumn("rebate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnrebate)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function NewRebatemensualRow() As RebatemensualRow
      Return CType(Me.NewRow, RebatemensualRow)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
      Return New RebatemensualRow(builder)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetRowType() As Global.System.Type
      Return GetType(RebatemensualRow)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
      MyBase.OnRowChanged(e)
      If (Not (Me.RebatemensualRowChangedEvent) Is Nothing) Then
        RaiseEvent RebatemensualRowChanged(Me, New RebatemensualRowChangeEvent(CType(e.Row, RebatemensualRow), e.Action))
      End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
      MyBase.OnRowChanging(e)
      If (Not (Me.RebatemensualRowChangingEvent) Is Nothing) Then
        RaiseEvent RebatemensualRowChanging(Me, New RebatemensualRowChangeEvent(CType(e.Row, RebatemensualRow), e.Action))
      End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
      MyBase.OnRowDeleted(e)
      If (Not (Me.RebatemensualRowDeletedEvent) Is Nothing) Then
        RaiseEvent RebatemensualRowDeleted(Me, New RebatemensualRowChangeEvent(CType(e.Row, RebatemensualRow), e.Action))
      End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
      MyBase.OnRowDeleting(e)
      If (Not (Me.RebatemensualRowDeletingEvent) Is Nothing) Then
        RaiseEvent RebatemensualRowDeleting(Me, New RebatemensualRowChangeEvent(CType(e.Row, RebatemensualRow), e.Action))
      End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub RemoveRebatemensualRow(ByVal row As RebatemensualRow)
      Me.Rows.Remove(row)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
      Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
      Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
      Dim ds As FactorDataSet = New FactorDataSet()
      Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
      any1.Namespace = "http://www.w3.org/2001/XMLSchema"
      any1.MinOccurs = New Decimal(0)
      any1.MaxOccurs = Decimal.MaxValue
      any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
      sequence.Items.Add(any1)
      Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
      any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
      any2.MinOccurs = New Decimal(1)
      any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
      sequence.Items.Add(any2)
      Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
      attribute1.Name = "namespace"
      attribute1.FixedValue = ds.Namespace
      type.Attributes.Add(attribute1)
      Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
      attribute2.Name = "tableTypeName"
      attribute2.FixedValue = "RebatemensualDataTable"
      type.Attributes.Add(attribute2)
      type.Particle = sequence
      Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
      If xs.Contains(dsSchema.TargetNamespace) Then
        Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Try
          Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
          dsSchema.Write(s1)
          Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
          Do While schemas.MoveNext
            schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
            s2.SetLength(0)
            schema.Write(s2)
            If (s1.Length = s2.Length) Then
              s1.Position = 0
              s2.Position = 0

              Do While ((s1.Position <> s1.Length) _
                          AndAlso (s1.ReadByte = s2.ReadByte))


              Loop
              If (s1.Position = s1.Length) Then
                Return type
              End If
            End If

          Loop
        Finally
          If (Not (s1) Is Nothing) Then
            s1.Close()
          End If
          If (Not (s2) Is Nothing) Then
            s2.Close()
          End If
        End Try
      End If
      xs.Add(dsSchema)
      Return type
    End Function
  End Class

  '''<summary>
  '''Represents strongly named DataRow class.
  '''</summary>
  Partial Public Class SP_ReporteControlRiesgoRow
    Inherits Global.System.Data.DataRow

    Private tableSP_ReporteControlRiesgo As SP_ReporteControlRiesgoDataTable

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
      MyBase.New(rb)
      Me.tableSP_ReporteControlRiesgo = CType(Me.Table, SP_ReporteControlRiesgoDataTable)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property lcredito() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.lcreditoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'lcredito' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ReporteControlRiesgo.lcreditoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property id_rec() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.id_recColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'id_rec' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ReporteControlRiesgo.id_recColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property clientet24() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.clientet24Column), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'clientet24' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ReporteControlRiesgo.clientet24Column) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property cliente() As Integer
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.clienteColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'cliente' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableSP_ReporteControlRiesgo.clienteColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property nombre() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.nombreColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'nombre' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ReporteControlRiesgo.nombreColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property ldescrip() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.ldescripColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'ldescrip' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ReporteControlRiesgo.ldescripColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property lmonto() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.lmontoColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'lmonto' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ReporteControlRiesgo.lmontoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property lutilizado() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.lutilizadoColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'lutilizado' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ReporteControlRiesgo.lutilizadoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property ldisponibl() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.ldisponiblColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'ldisponibl' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ReporteControlRiesgo.ldisponiblColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property lvence() As Date
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.lvenceColumn), Date)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'lvence' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As Date)
        Me(Me.tableSP_ReporteControlRiesgo.lvenceColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property porcentaje() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.porcentajeColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'porcentaje' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ReporteControlRiesgo.porcentajeColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property idmultiple() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.idmultipleColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'idmultiple' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ReporteControlRiesgo.idmultipleColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property cuenta() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.cuentaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'cuenta' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ReporteControlRiesgo.cuentaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property adeudo() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.adeudoColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'adeudo' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ReporteControlRiesgo.adeudoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property vencida() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.vencidaColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'vencida' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ReporteControlRiesgo.vencidaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property garantsdo() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.garantsdoColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'garantsdo' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ReporteControlRiesgo.garantsdoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property garantutl() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.garantutlColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'garantutl' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ReporteControlRiesgo.garantutlColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property lmultiple() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.lmultipleColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'lmultiple' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ReporteControlRiesgo.lmultipleColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property RgoDesc() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.RgoDescColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'RgoDesc' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ReporteControlRiesgo.RgoDescColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property gliq() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.gliqColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'gliq' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ReporteControlRiesgo.gliqColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property Cancela() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.CancelaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'Cancela' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ReporteControlRiesgo.CancelaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property Infolinea() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.InfolineaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'Infolinea' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ReporteControlRiesgo.InfolineaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property Div() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ReporteControlRiesgo.DivColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'Div' in table 'SP_ReporteControlRiesgo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ReporteControlRiesgo.DivColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IslcreditoNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.lcreditoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetlcreditoNull()
      Me(Me.tableSP_ReporteControlRiesgo.lcreditoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function Isid_recNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.id_recColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub Setid_recNull()
      Me(Me.tableSP_ReporteControlRiesgo.id_recColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function Isclientet24Null() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.clientet24Column)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub Setclientet24Null()
      Me(Me.tableSP_ReporteControlRiesgo.clientet24Column) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsclienteNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.clienteColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetclienteNull()
      Me(Me.tableSP_ReporteControlRiesgo.clienteColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsnombreNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.nombreColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetnombreNull()
      Me(Me.tableSP_ReporteControlRiesgo.nombreColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsldescripNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.ldescripColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetldescripNull()
      Me(Me.tableSP_ReporteControlRiesgo.ldescripColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IslmontoNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.lmontoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetlmontoNull()
      Me(Me.tableSP_ReporteControlRiesgo.lmontoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IslutilizadoNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.lutilizadoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetlutilizadoNull()
      Me(Me.tableSP_ReporteControlRiesgo.lutilizadoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsldisponiblNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.ldisponiblColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetldisponiblNull()
      Me(Me.tableSP_ReporteControlRiesgo.ldisponiblColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IslvenceNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.lvenceColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetlvenceNull()
      Me(Me.tableSP_ReporteControlRiesgo.lvenceColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsporcentajeNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.porcentajeColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetporcentajeNull()
      Me(Me.tableSP_ReporteControlRiesgo.porcentajeColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsidmultipleNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.idmultipleColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetidmultipleNull()
      Me(Me.tableSP_ReporteControlRiesgo.idmultipleColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscuentaNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.cuentaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcuentaNull()
      Me(Me.tableSP_ReporteControlRiesgo.cuentaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsadeudoNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.adeudoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetadeudoNull()
      Me(Me.tableSP_ReporteControlRiesgo.adeudoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsvencidaNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.vencidaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetvencidaNull()
      Me(Me.tableSP_ReporteControlRiesgo.vencidaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsgarantsdoNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.garantsdoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetgarantsdoNull()
      Me(Me.tableSP_ReporteControlRiesgo.garantsdoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsgarantutlNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.garantutlColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetgarantutlNull()
      Me(Me.tableSP_ReporteControlRiesgo.garantutlColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IslmultipleNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.lmultipleColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetlmultipleNull()
      Me(Me.tableSP_ReporteControlRiesgo.lmultipleColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsRgoDescNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.RgoDescColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetRgoDescNull()
      Me(Me.tableSP_ReporteControlRiesgo.RgoDescColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsgliqNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.gliqColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetgliqNull()
      Me(Me.tableSP_ReporteControlRiesgo.gliqColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsCancelaNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.CancelaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetCancelaNull()
      Me(Me.tableSP_ReporteControlRiesgo.CancelaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsInfolineaNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.InfolineaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetInfolineaNull()
      Me(Me.tableSP_ReporteControlRiesgo.InfolineaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsDivNull() As Boolean
      Return Me.IsNull(Me.tableSP_ReporteControlRiesgo.DivColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetDivNull()
      Me(Me.tableSP_ReporteControlRiesgo.DivColumn) = Global.System.Convert.DBNull
    End Sub
  End Class

  '''<summary>
  '''Represents strongly named DataRow class.
  '''</summary>
  Partial Public Class NotificacionesDetalleRow
    Inherits Global.System.Data.DataRow

    Private tableNotificacionesDetalle As NotificacionesDetalleDataTable

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
      MyBase.New(rb)
      Me.tableNotificacionesDetalle = CType(Me.Table, NotificacionesDetalleDataTable)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property contrato() As Integer
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.contratoColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'contrato' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableNotificacionesDetalle.contratoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property cesion() As Integer
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.cesionColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'cesion' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableNotificacionesDetalle.cesionColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property docto() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.doctoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'docto' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.doctoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property deudor() As Integer
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.deudorColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'deudor' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableNotificacionesDetalle.deudorColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property nombre() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.nombreColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'nombre' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.nombreColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property deuname() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.deunameColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'deuname' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.deunameColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property calle() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.calleColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'calle' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.calleColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property noext() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.noextColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'noext' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.noextColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property noint() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.nointColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'noint' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.nointColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property domicilio() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.domicilioColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'domicilio' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.domicilioColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property municipio() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.municipioColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'municipio' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.municipioColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property estado() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.estadoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'estado' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.estadoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property colonia() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.coloniaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'colonia' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.coloniaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property moneda() As Integer
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.monedaColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'moneda' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableNotificacionesDetalle.monedaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property fec_alta() As Date
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.fec_altaColumn), Date)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'fec_alta' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Date)
        Me(Me.tableNotificacionesDetalle.fec_altaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property fec_vence() As Date
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.fec_venceColumn), Date)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'fec_vence' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Date)
        Me(Me.tableNotificacionesDetalle.fec_venceColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property monto() As Decimal
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.montoColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'monto' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableNotificacionesDetalle.montoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property pagare() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.pagareColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'pagare' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.pagareColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property Cdomicilio() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.CdomicilioColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'Cdomicilio' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.CdomicilioColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property Cmunicipio() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.CmunicipioColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'Cmunicipio' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.CmunicipioColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property cveedo() As Integer
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.cveedoColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'cveedo' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableNotificacionesDetalle.cveedoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property cvecd() As Integer
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.cvecdColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'cvecd' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableNotificacionesDetalle.cvecdColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property Cestado() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.CestadoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'Cestado' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.CestadoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property Cnombre() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.CnombreColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'Cnombre' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.CnombreColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property cColonia() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.cColoniaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'cColonia' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.cColoniaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property cp() As Integer
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.cpColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'cp' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableNotificacionesDetalle.cpColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property ccp() As Integer
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.ccpColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'ccp' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableNotificacionesDetalle.ccpColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property email() As String
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.emailColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'email' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableNotificacionesDetalle.emailColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property Altacont() As Date
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.AltacontColumn), Date)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'Altacont' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Date)
        Me(Me.tableNotificacionesDetalle.AltacontColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property producto() As Integer
      Get
        Try
          Return CType(Me(Me.tableNotificacionesDetalle.productoColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'producto' in table 'NotificacionesDetalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableNotificacionesDetalle.productoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscontratoNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.contratoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcontratoNull()
      Me(Me.tableNotificacionesDetalle.contratoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscesionNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.cesionColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcesionNull()
      Me(Me.tableNotificacionesDetalle.cesionColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdoctoNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.doctoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdoctoNull()
      Me(Me.tableNotificacionesDetalle.doctoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdeudorNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.deudorColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdeudorNull()
      Me(Me.tableNotificacionesDetalle.deudorColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsnombreNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.nombreColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetnombreNull()
      Me(Me.tableNotificacionesDetalle.nombreColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdeunameNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.deunameColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdeunameNull()
      Me(Me.tableNotificacionesDetalle.deunameColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscalleNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.calleColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcalleNull()
      Me(Me.tableNotificacionesDetalle.calleColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsnoextNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.noextColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetnoextNull()
      Me(Me.tableNotificacionesDetalle.noextColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsnointNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.nointColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetnointNull()
      Me(Me.tableNotificacionesDetalle.nointColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdomicilioNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.domicilioColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdomicilioNull()
      Me(Me.tableNotificacionesDetalle.domicilioColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsmunicipioNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.municipioColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetmunicipioNull()
      Me(Me.tableNotificacionesDetalle.municipioColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsestadoNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.estadoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetestadoNull()
      Me(Me.tableNotificacionesDetalle.estadoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscoloniaNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.coloniaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcoloniaNull()
      Me(Me.tableNotificacionesDetalle.coloniaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsmonedaNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.monedaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetmonedaNull()
      Me(Me.tableNotificacionesDetalle.monedaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function Isfec_altaNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.fec_altaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub Setfec_altaNull()
      Me(Me.tableNotificacionesDetalle.fec_altaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function Isfec_venceNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.fec_venceColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub Setfec_venceNull()
      Me(Me.tableNotificacionesDetalle.fec_venceColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsmontoNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.montoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetmontoNull()
      Me(Me.tableNotificacionesDetalle.montoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IspagareNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.pagareColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetpagareNull()
      Me(Me.tableNotificacionesDetalle.pagareColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsCdomicilioNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.CdomicilioColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetCdomicilioNull()
      Me(Me.tableNotificacionesDetalle.CdomicilioColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsCmunicipioNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.CmunicipioColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetCmunicipioNull()
      Me(Me.tableNotificacionesDetalle.CmunicipioColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscveedoNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.cveedoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcveedoNull()
      Me(Me.tableNotificacionesDetalle.cveedoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscvecdNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.cvecdColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcvecdNull()
      Me(Me.tableNotificacionesDetalle.cvecdColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsCestadoNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.CestadoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetCestadoNull()
      Me(Me.tableNotificacionesDetalle.CestadoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsCnombreNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.CnombreColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetCnombreNull()
      Me(Me.tableNotificacionesDetalle.CnombreColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscColoniaNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.cColoniaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcColoniaNull()
      Me(Me.tableNotificacionesDetalle.cColoniaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscpNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.cpColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcpNull()
      Me(Me.tableNotificacionesDetalle.cpColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsccpNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.ccpColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetccpNull()
      Me(Me.tableNotificacionesDetalle.ccpColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsemailNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.emailColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetemailNull()
      Me(Me.tableNotificacionesDetalle.emailColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsAltacontNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.AltacontColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetAltacontNull()
      Me(Me.tableNotificacionesDetalle.AltacontColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsproductoNull() As Boolean
      Return Me.IsNull(Me.tableNotificacionesDetalle.productoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetproductoNull()
      Me(Me.tableNotificacionesDetalle.productoColumn) = Global.System.Convert.DBNull
    End Sub
  End Class

  '''<summary>
  '''Represents strongly named DataRow class.
  '''</summary>
  Partial Public Class SP_ConsultaAforosLiquidadosRow
    Inherits Global.System.Data.DataRow

    Private tableSP_ConsultaAforosLiquidados As SP_ConsultaAforosLiquidadosDataTable

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
      MyBase.New(rb)
      Me.tableSP_ConsultaAforosLiquidados = CType(Me.Table, SP_ConsultaAforosLiquidadosDataTable)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property contrato() As Integer
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.contratoColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'contrato' in table 'SP_ConsultaAforosLiquidados' is DBNull." & _
                  "", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableSP_ConsultaAforosLiquidados.contratoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property importe() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.importeColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'importe' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ConsultaAforosLiquidados.importeColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property pago() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.pagoColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'pago' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ConsultaAforosLiquidados.pagoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property Cuenta() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.CuentaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'Cuenta' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ConsultaAforosLiquidados.CuentaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property folio() As Integer
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.folioColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'folio' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableSP_ConsultaAforosLiquidados.folioColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property movto() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.movtoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'movto' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ConsultaAforosLiquidados.movtoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property nombre() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.nombreColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'nombre' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ConsultaAforosLiquidados.nombreColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property cobranza() As Integer
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.cobranzaColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'cobranza' in table 'SP_ConsultaAforosLiquidados' is DBNull." & _
                  "", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableSP_ConsultaAforosLiquidados.cobranzaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property pagomatriz() As Boolean
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.pagomatrizColumn), Boolean)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'pagomatriz' in table 'SP_ConsultaAforosLiquidados' is DBNul" & _
                  "l.", e)
        End Try
      End Get
      Set(value As Boolean)
        Me(Me.tableSP_ConsultaAforosLiquidados.pagomatrizColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property fecpago() As Date
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.fecpagoColumn), Date)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'fecpago' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As Date)
        Me(Me.tableSP_ConsultaAforosLiquidados.fecpagoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property Moneda() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.MonedaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'Moneda' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ConsultaAforosLiquidados.MonedaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property userid() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.useridColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'userid' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ConsultaAforosLiquidados.useridColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property numreccta() As Integer
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.numrecctaColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'numreccta' in table 'SP_ConsultaAforosLiquidados' is DBNull" & _
                  ".", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableSP_ConsultaAforosLiquidados.numrecctaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property idctabanco() As Integer
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.idctabancoColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'idctabanco' in table 'SP_ConsultaAforosLiquidados' is DBNul" & _
                  "l.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableSP_ConsultaAforosLiquidados.idctabancoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property benef() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.benefColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'benef' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ConsultaAforosLiquidados.benefColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property producto() As Integer
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.productoColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'producto' in table 'SP_ConsultaAforosLiquidados' is DBNull." & _
                  "", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableSP_ConsultaAforosLiquidados.productoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property mone() As Integer
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.moneColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'mone' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableSP_ConsultaAforosLiquidados.moneColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property id() As Integer
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.idColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'id' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableSP_ConsultaAforosLiquidados.idColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property identidad() As Integer
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.identidadColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'identidad' in table 'SP_ConsultaAforosLiquidados' is DBNull" & _
                  ".", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableSP_ConsultaAforosLiquidados.identidadColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property aforo() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.aforoColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'aforo' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ConsultaAforosLiquidados.aforoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property descto() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.desctoColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'descto' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ConsultaAforosLiquidados.desctoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property bonifica() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.bonificaColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'bonifica' in table 'SP_ConsultaAforosLiquidados' is DBNull." & _
                  "", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ConsultaAforosLiquidados.bonificaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property cartera() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.carteraColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'cartera' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ConsultaAforosLiquidados.carteraColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property adeudos() As Decimal
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.adeudosColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'adeudos' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tableSP_ConsultaAforosLiquidados.adeudosColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property numrec() As Integer
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.numrecColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'numrec' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableSP_ConsultaAforosLiquidados.numrecColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property ctabanco() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.ctabancoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'ctabanco' in table 'SP_ConsultaAforosLiquidados' is DBNull." & _
                  "", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ConsultaAforosLiquidados.ctabancoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property Origen() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.OrigenColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'Origen' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ConsultaAforosLiquidados.OrigenColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property cuenta1() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.cuenta1Column), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'cuenta1' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ConsultaAforosLiquidados.cuenta1Column) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property shortname() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.shortnameColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'shortname' in table 'SP_ConsultaAforosLiquidados' is DBNull" & _
                  ".", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ConsultaAforosLiquidados.shortnameColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property clabe() As String
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.clabeColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'clabe' in table 'SP_ConsultaAforosLiquidados' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_ConsultaAforosLiquidados.clabeColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property timestart() As Date
      Get
        Try
          Return CType(Me(Me.tableSP_ConsultaAforosLiquidados.timestartColumn), Date)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'timestart' in table 'SP_ConsultaAforosLiquidados' is DBNull" & _
                  ".", e)
        End Try
      End Get
      Set(value As Date)
        Me(Me.tableSP_ConsultaAforosLiquidados.timestartColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscontratoNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.contratoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcontratoNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.contratoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsimporteNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.importeColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetimporteNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.importeColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IspagoNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.pagoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetpagoNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.pagoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsCuentaNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.CuentaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetCuentaNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.CuentaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsfolioNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.folioColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetfolioNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.folioColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsmovtoNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.movtoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetmovtoNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.movtoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsnombreNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.nombreColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetnombreNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.nombreColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscobranzaNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.cobranzaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcobranzaNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.cobranzaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IspagomatrizNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.pagomatrizColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetpagomatrizNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.pagomatrizColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsfecpagoNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.fecpagoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetfecpagoNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.fecpagoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsMonedaNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.MonedaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetMonedaNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.MonedaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsuseridNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.useridColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetuseridNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.useridColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsnumrecctaNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.numrecctaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetnumrecctaNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.numrecctaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsidctabancoNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.idctabancoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetidctabancoNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.idctabancoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsbenefNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.benefColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetbenefNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.benefColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsproductoNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.productoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetproductoNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.productoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsmoneNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.moneColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetmoneNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.moneColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsidNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.idColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetidNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.idColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsidentidadNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.identidadColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetidentidadNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.identidadColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsaforoNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.aforoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetaforoNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.aforoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdesctoNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.desctoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdesctoNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.desctoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsbonificaNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.bonificaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetbonificaNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.bonificaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscarteraNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.carteraColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcarteraNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.carteraColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsadeudosNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.adeudosColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetadeudosNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.adeudosColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsnumrecNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.numrecColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetnumrecNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.numrecColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsctabancoNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.ctabancoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetctabancoNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.ctabancoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsOrigenNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.OrigenColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetOrigenNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.OrigenColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function Iscuenta1Null() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.cuenta1Column)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub Setcuenta1Null()
      Me(Me.tableSP_ConsultaAforosLiquidados.cuenta1Column) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsshortnameNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.shortnameColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetshortnameNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.shortnameColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsclabeNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.clabeColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetclabeNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.clabeColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IstimestartNull() As Boolean
      Return Me.IsNull(Me.tableSP_ConsultaAforosLiquidados.timestartColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SettimestartNull()
      Me(Me.tableSP_ConsultaAforosLiquidados.timestartColumn) = Global.System.Convert.DBNull
    End Sub
  End Class

  '''<summary>
  '''Represents strongly named DataRow class.
  '''</summary>
  Partial Public Class detalleRow
    Inherits Global.System.Data.DataRow

    Private tabledetalle As detalleDataTable

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
      MyBase.New(rb)
      Me.tabledetalle = CType(Me.Table, detalleDataTable)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property iddetalle() As Decimal
      Get
        Return CType(Me(Me.tabledetalle.iddetalleColumn), Decimal)
      End Get
      Set(value As Decimal)
        Me(Me.tabledetalle.iddetalleColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property folio() As Integer
      Get
        Try
          Return CType(Me(Me.tabledetalle.folioColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'folio' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tabledetalle.folioColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property contrato() As Integer
      Get
        Try
          Return CType(Me(Me.tabledetalle.contratoColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'contrato' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tabledetalle.contratoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property deudor() As Integer
      Get
        Try
          Return CType(Me(Me.tabledetalle.deudorColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'deudor' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tabledetalle.deudorColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property docto() As String
      Get
        Try
          Return CType(Me(Me.tabledetalle.doctoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'docto' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tabledetalle.doctoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property pagare() As String
      Get
        Try
          Return CType(Me(Me.tabledetalle.pagareColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'pagare' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tabledetalle.pagareColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property referencia() As String
      Get
        Try
          Return CType(Me(Me.tabledetalle.referenciaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'referencia' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tabledetalle.referenciaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property fec_vence() As Date
      Get
        Try
          Return CType(Me(Me.tabledetalle.fec_venceColumn), Date)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'fec_vence' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Date)
        Me(Me.tabledetalle.fec_venceColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property importe() As Decimal
      Get
        Try
          Return CType(Me(Me.tabledetalle.importeColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'importe' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tabledetalle.importeColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property tinter() As Decimal
      Get
        Try
          Return CType(Me(Me.tabledetalle.tinterColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'tinter' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tabledetalle.tinterColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property ivainteres() As Decimal
      Get
        Try
          Return CType(Me(Me.tabledetalle.ivainteresColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'ivainteres' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tabledetalle.ivainteresColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property monto() As Decimal
      Get
        Try
          Return CType(Me(Me.tabledetalle.montoColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'monto' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tabledetalle.montoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property descto() As Decimal
      Get
        Try
          Return CType(Me(Me.tabledetalle.desctoColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'descto' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tabledetalle.desctoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property hono() As Decimal
      Get
        Try
          Return CType(Me(Me.tabledetalle.honoColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'hono' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tabledetalle.honoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property iva() As Decimal
      Get
        Try
          Return CType(Me(Me.tabledetalle.ivaColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'iva' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tabledetalle.ivaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property void() As Boolean
      Get
        Try
          Return CType(Me(Me.tabledetalle.voidColumn), Boolean)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'void' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Boolean)
        Me(Me.tabledetalle.voidColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property plazo() As Decimal
      Get
        Try
          Return CType(Me(Me.tabledetalle.plazoColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'plazo' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tabledetalle.plazoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property int_diario() As Decimal
      Get
        Try
          Return CType(Me(Me.tabledetalle.int_diarioColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'int_diario' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tabledetalle.int_diarioColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property ctetinter() As Decimal
      Get
        Try
          Return CType(Me(Me.tabledetalle.ctetinterColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'ctetinter' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tabledetalle.ctetinterColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property ctehono() As Decimal
      Get
        Try
          Return CType(Me(Me.tabledetalle.ctehonoColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'ctehono' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tabledetalle.ctehonoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property cteiva() As Decimal
      Get
        Try
          Return CType(Me(Me.tabledetalle.cteivaColumn), Decimal)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'cteiva' in table 'detalle' is DBNull.", e)
        End Try
      End Get
      Set(value As Decimal)
        Me(Me.tabledetalle.cteivaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsfolioNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.folioColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetfolioNull()
      Me(Me.tabledetalle.folioColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscontratoNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.contratoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcontratoNull()
      Me(Me.tabledetalle.contratoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdeudorNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.deudorColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdeudorNull()
      Me(Me.tabledetalle.deudorColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdoctoNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.doctoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdoctoNull()
      Me(Me.tabledetalle.doctoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IspagareNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.pagareColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetpagareNull()
      Me(Me.tabledetalle.pagareColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsreferenciaNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.referenciaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetreferenciaNull()
      Me(Me.tabledetalle.referenciaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function Isfec_venceNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.fec_venceColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub Setfec_venceNull()
      Me(Me.tabledetalle.fec_venceColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsimporteNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.importeColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetimporteNull()
      Me(Me.tabledetalle.importeColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IstinterNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.tinterColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SettinterNull()
      Me(Me.tabledetalle.tinterColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsivainteresNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.ivainteresColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetivainteresNull()
      Me(Me.tabledetalle.ivainteresColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsmontoNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.montoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetmontoNull()
      Me(Me.tabledetalle.montoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdesctoNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.desctoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdesctoNull()
      Me(Me.tabledetalle.desctoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IshonoNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.honoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SethonoNull()
      Me(Me.tabledetalle.honoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsivaNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.ivaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetivaNull()
      Me(Me.tabledetalle.ivaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsvoidNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.voidColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetvoidNull()
      Me(Me.tabledetalle.voidColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsplazoNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.plazoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetplazoNull()
      Me(Me.tabledetalle.plazoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function Isint_diarioNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.int_diarioColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub Setint_diarioNull()
      Me(Me.tabledetalle.int_diarioColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsctetinterNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.ctetinterColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetctetinterNull()
      Me(Me.tabledetalle.ctetinterColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsctehonoNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.ctehonoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetctehonoNull()
      Me(Me.tabledetalle.ctehonoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscteivaNull() As Boolean
      Return Me.IsNull(Me.tabledetalle.cteivaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcteivaNull()
      Me(Me.tabledetalle.cteivaColumn) = Global.System.Convert.DBNull
    End Sub
  End Class

  '''<summary>
  '''Represents strongly named DataRow class.
  '''</summary>
  Partial Public Class SP_InformaCobrosRow
    Inherits Global.System.Data.DataRow

    Private tableSP_InformaCobros As SP_InformaCobrosDataTable

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
      MyBase.New(rb)
      Me.tableSP_InformaCobros = CType(Me.Table, SP_InformaCobrosDataTable)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property fecha() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.fechaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'fecha' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.fechaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property contrato() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.contratoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'contrato' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.contratoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property deudor() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.deudorColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'deudor' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.deudorColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property cesion() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.cesionColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'cesion' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.cesionColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property docto() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.doctoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'docto' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.doctoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property importe() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.importeColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'importe' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.importeColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property descto() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.desctoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'descto' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.desctoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property bonifica() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.bonificaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'bonifica' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.bonificaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property neto() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.netoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'neto' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.netoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property cobranza() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.cobranzaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'cobranza' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.cobranzaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property safectado() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.safectadoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'safectado' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.safectadoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property scv() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.scvColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'scv' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.scvColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property nombredeudor() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.nombredeudorColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'nombredeudor' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.nombredeudorColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property nombre() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.nombreColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'Nombre' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.nombreColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property porc_anti() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.porc_antiColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'porc_anti' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.porc_antiColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property descrip() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.descripColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'descrip' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.descripColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property monedastr() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.monedastrColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'monedastr' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.monedastrColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property cobrado() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.cobradoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'cobrado' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.cobradoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property aforo() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.aforoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'aforo' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.aforoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property pago() As String
      Get
        Try
          Return CType(Me(Me.tableSP_InformaCobros.pagoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'pago' in table 'SP_InformaCobros' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableSP_InformaCobros.pagoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsfechaNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.fechaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetfechaNull()
      Me(Me.tableSP_InformaCobros.fechaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscontratoNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.contratoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcontratoNull()
      Me(Me.tableSP_InformaCobros.contratoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdeudorNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.deudorColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdeudorNull()
      Me(Me.tableSP_InformaCobros.deudorColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscesionNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.cesionColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcesionNull()
      Me(Me.tableSP_InformaCobros.cesionColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdoctoNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.doctoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdoctoNull()
      Me(Me.tableSP_InformaCobros.doctoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsimporteNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.importeColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetimporteNull()
      Me(Me.tableSP_InformaCobros.importeColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdesctoNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.desctoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdesctoNull()
      Me(Me.tableSP_InformaCobros.desctoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsbonificaNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.bonificaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetbonificaNull()
      Me(Me.tableSP_InformaCobros.bonificaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsnetoNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.netoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetnetoNull()
      Me(Me.tableSP_InformaCobros.netoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscobranzaNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.cobranzaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcobranzaNull()
      Me(Me.tableSP_InformaCobros.cobranzaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IssafectadoNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.safectadoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetsafectadoNull()
      Me(Me.tableSP_InformaCobros.safectadoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsscvNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.scvColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetscvNull()
      Me(Me.tableSP_InformaCobros.scvColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsnombredeudorNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.nombredeudorColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetnombredeudorNull()
      Me(Me.tableSP_InformaCobros.nombredeudorColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsnombreNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.nombreColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetnombreNull()
      Me(Me.tableSP_InformaCobros.nombreColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function Isporc_antiNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.porc_antiColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub Setporc_antiNull()
      Me(Me.tableSP_InformaCobros.porc_antiColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdescripNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.descripColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdescripNull()
      Me(Me.tableSP_InformaCobros.descripColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsmonedastrNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.monedastrColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetmonedastrNull()
      Me(Me.tableSP_InformaCobros.monedastrColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscobradoNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.cobradoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcobradoNull()
      Me(Me.tableSP_InformaCobros.cobradoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsaforoNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.aforoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetaforoNull()
      Me(Me.tableSP_InformaCobros.aforoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IspagoNull() As Boolean
      Return Me.IsNull(Me.tableSP_InformaCobros.pagoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetpagoNull()
      Me(Me.tableSP_InformaCobros.pagoColumn) = Global.System.Convert.DBNull
    End Sub
  End Class

  '''<summary>
  '''Represents strongly named DataRow class.
  '''</summary>
  Partial Public Class ReporteadeudosRow
    Inherits Global.System.Data.DataRow

    Private tableReporteadeudos As ReporteadeudosDataTable

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
      MyBase.New(rb)
      Me.tableReporteadeudos = CType(Me.Table, ReporteadeudosDataTable)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property contrato() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.contratoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'contrato' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.contratoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property Adeudo() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.AdeudoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'Adeudo' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.AdeudoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property docto() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.doctoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'docto' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.doctoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property tipo() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.tipoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'tipo' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.tipoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property serie() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.serieColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'serie' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.serieColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property Nombre() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.NombreColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'Nombre' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.NombreColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property fec_alta() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.fec_altaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'fec_alta' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.fec_altaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property monto() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.montoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'monto' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.montoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property saldo() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.saldoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'saldo' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.saldoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property moneda() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.monedaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'moneda' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.monedaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property monedastr() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.monedastrColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'monedastr' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.monedastrColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property idadeudo() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.idadeudoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'idadeudo' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.idadeudoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property iva() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.ivaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'iva' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.ivaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property impbase() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.impbaseColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'impbase' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.impbaseColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property impiva() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.impivaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'impiva' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.impivaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property salbase() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.salbaseColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'salbase' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.salbaseColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property saliva() As String
      Get
        Try
          Return CType(Me(Me.tableReporteadeudos.salivaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'saliva' in table 'Reporteadeudos' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReporteadeudos.salivaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscontratoNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.contratoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcontratoNull()
      Me(Me.tableReporteadeudos.contratoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsAdeudoNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.AdeudoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetAdeudoNull()
      Me(Me.tableReporteadeudos.AdeudoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdoctoNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.doctoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdoctoNull()
      Me(Me.tableReporteadeudos.doctoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IstipoNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.tipoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SettipoNull()
      Me(Me.tableReporteadeudos.tipoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsserieNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.serieColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetserieNull()
      Me(Me.tableReporteadeudos.serieColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsNombreNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.NombreColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetNombreNull()
      Me(Me.tableReporteadeudos.NombreColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function Isfec_altaNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.fec_altaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub Setfec_altaNull()
      Me(Me.tableReporteadeudos.fec_altaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsmontoNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.montoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetmontoNull()
      Me(Me.tableReporteadeudos.montoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IssaldoNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.saldoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetsaldoNull()
      Me(Me.tableReporteadeudos.saldoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsmonedaNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.monedaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetmonedaNull()
      Me(Me.tableReporteadeudos.monedaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsmonedastrNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.monedastrColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetmonedastrNull()
      Me(Me.tableReporteadeudos.monedastrColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsidadeudoNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.idadeudoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetidadeudoNull()
      Me(Me.tableReporteadeudos.idadeudoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsivaNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.ivaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetivaNull()
      Me(Me.tableReporteadeudos.ivaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsimpbaseNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.impbaseColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetimpbaseNull()
      Me(Me.tableReporteadeudos.impbaseColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsimpivaNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.impivaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetimpivaNull()
      Me(Me.tableReporteadeudos.impivaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IssalbaseNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.salbaseColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetsalbaseNull()
      Me(Me.tableReporteadeudos.salbaseColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IssalivaNull() As Boolean
      Return Me.IsNull(Me.tableReporteadeudos.salivaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetsalivaNull()
      Me(Me.tableReporteadeudos.salivaColumn) = Global.System.Convert.DBNull
    End Sub
  End Class

  '''<summary>
  '''Represents strongly named DataRow class.
  '''</summary>
  Partial Public Class AnexoRow
    Inherits Global.System.Data.DataRow

    Private tableAnexo As AnexoDataTable

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
      MyBase.New(rb)
      Me.tableAnexo = CType(Me.Table, AnexoDataTable)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property deudor() As String
      Get
        Try
          Return CType(Me(Me.tableAnexo.deudorColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'deudor' in table 'Anexo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableAnexo.deudorColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property contrato() As String
      Get
        Try
          Return CType(Me(Me.tableAnexo.contratoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'contrato' in table 'Anexo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableAnexo.contratoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property producto() As String
      Get
        Try
          Return CType(Me(Me.tableAnexo.productoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'producto' in table 'Anexo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableAnexo.productoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property nombre() As String
      Get
        Try
          Return CType(Me(Me.tableAnexo.nombreColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'nombre' in table 'Anexo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableAnexo.nombreColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property deuname() As String
      Get
        Try
          Return CType(Me(Me.tableAnexo.deunameColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'deuname' in table 'Anexo' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableAnexo.deunameColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdeudorNull() As Boolean
      Return Me.IsNull(Me.tableAnexo.deudorColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdeudorNull()
      Me(Me.tableAnexo.deudorColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscontratoNull() As Boolean
      Return Me.IsNull(Me.tableAnexo.contratoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcontratoNull()
      Me(Me.tableAnexo.contratoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsproductoNull() As Boolean
      Return Me.IsNull(Me.tableAnexo.productoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetproductoNull()
      Me(Me.tableAnexo.productoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsnombreNull() As Boolean
      Return Me.IsNull(Me.tableAnexo.nombreColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetnombreNull()
      Me(Me.tableAnexo.nombreColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdeunameNull() As Boolean
      Return Me.IsNull(Me.tableAnexo.deunameColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdeunameNull()
      Me(Me.tableAnexo.deunameColumn) = Global.System.Convert.DBNull
    End Sub
  End Class

  '''<summary>
  '''Represents strongly named DataRow class.
  '''</summary>
  Partial Public Class usersregsRow
    Inherits Global.System.Data.DataRow

    Private tableusersregs As usersregsDataTable

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
      MyBase.New(rb)
      Me.tableusersregs = CType(Me.Table, usersregsDataTable)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property id() As String
      Get
        Try
          Return CType(Me(Me.tableusersregs.idColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'id' in table 'Usersregs' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableusersregs.idColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property identidad() As String
      Get
        Try
          Return CType(Me(Me.tableusersregs.identidadColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'identidad' in table 'Usersregs' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableusersregs.identidadColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property identidadname() As String
      Get
        Try
          Return CType(Me(Me.tableusersregs.identidadnameColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'identidadname' in table 'Usersregs' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableusersregs.identidadnameColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property username() As String
      Get
        Try
          Return CType(Me(Me.tableusersregs.usernameColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'username' in table 'Usersregs' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableusersregs.usernameColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property nombre() As String
      Get
        Try
          Return CType(Me(Me.tableusersregs.nombreColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'nombre' in table 'Usersregs' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableusersregs.nombreColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property email() As String
      Get
        Try
          Return CType(Me(Me.tableusersregs.emailColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'email' in table 'Usersregs' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableusersregs.emailColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property perfil() As String
      Get
        Try
          Return CType(Me(Me.tableusersregs.perfilColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'perfil' in table 'Usersregs' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableusersregs.perfilColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property fec_alta() As String
      Get
        Try
          Return CType(Me(Me.tableusersregs.fec_altaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'fec_alta' in table 'Usersregs' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableusersregs.fec_altaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsidNull() As Boolean
      Return Me.IsNull(Me.tableusersregs.idColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetidNull()
      Me(Me.tableusersregs.idColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsidentidadNull() As Boolean
      Return Me.IsNull(Me.tableusersregs.identidadColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetidentidadNull()
      Me(Me.tableusersregs.identidadColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsidentidadnameNull() As Boolean
      Return Me.IsNull(Me.tableusersregs.identidadnameColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetidentidadnameNull()
      Me(Me.tableusersregs.identidadnameColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsusernameNull() As Boolean
      Return Me.IsNull(Me.tableusersregs.usernameColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetusernameNull()
      Me(Me.tableusersregs.usernameColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsnombreNull() As Boolean
      Return Me.IsNull(Me.tableusersregs.nombreColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetnombreNull()
      Me(Me.tableusersregs.nombreColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsemailNull() As Boolean
      Return Me.IsNull(Me.tableusersregs.emailColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetemailNull()
      Me(Me.tableusersregs.emailColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsperfilNull() As Boolean
      Return Me.IsNull(Me.tableusersregs.perfilColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetperfilNull()
      Me(Me.tableusersregs.perfilColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function Isfec_altaNull() As Boolean
      Return Me.IsNull(Me.tableusersregs.fec_altaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub Setfec_altaNull()
      Me(Me.tableusersregs.fec_altaColumn) = Global.System.Convert.DBNull
    End Sub
  End Class

  '''<summary>
  '''Represents strongly named DataRow class.
  '''</summary>
  Partial Public Class RebatemensualRow
    Inherits Global.System.Data.DataRow

    Private tableRebatemensual As RebatemensualDataTable

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
      MyBase.New(rb)
      Me.tableRebatemensual = CType(Me.Table, RebatemensualDataTable)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property contrato() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.contratoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'contrato' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.contratoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property nombre() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.nombreColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'nombre' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.nombreColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property proveedor() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.proveedorColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'proveedor' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.proveedorColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property docto() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.doctoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'docto' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.doctoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property cesion() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.cesionColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'cesion' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.cesionColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property referencia() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.referenciaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'referencia' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.referenciaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property monto() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.montoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'monto' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.montoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property plazo() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.plazoColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'plazo' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.plazoColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property fec_alta() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.fec_altaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'fec_alta' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.fec_altaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property fec_vence() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.fec_venceColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'fec_vence' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.fec_venceColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property deudor() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.deudorColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'deudor' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.deudorColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property tasaoper() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.tasaoperColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'tasaoper' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.tasaoperColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property rebatepts() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.rebateptsColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'rebatepts' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.rebateptsColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property interes() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.interesColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'interes' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.interesColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property intbxmas() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.intbxmasColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'intbxmas' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.intbxmasColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property rebate() As String
      Get
        Try
          Return CType(Me(Me.tableRebatemensual.rebateColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'rebate' in table 'Rebatemensual' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableRebatemensual.rebateColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscontratoNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.contratoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcontratoNull()
      Me(Me.tableRebatemensual.contratoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsnombreNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.nombreColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetnombreNull()
      Me(Me.tableRebatemensual.nombreColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsproveedorNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.proveedorColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetproveedorNull()
      Me(Me.tableRebatemensual.proveedorColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdoctoNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.doctoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdoctoNull()
      Me(Me.tableRebatemensual.doctoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IscesionNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.cesionColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetcesionNull()
      Me(Me.tableRebatemensual.cesionColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsreferenciaNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.referenciaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetreferenciaNull()
      Me(Me.tableRebatemensual.referenciaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsmontoNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.montoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetmontoNull()
      Me(Me.tableRebatemensual.montoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsplazoNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.plazoColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetplazoNull()
      Me(Me.tableRebatemensual.plazoColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function Isfec_altaNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.fec_altaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub Setfec_altaNull()
      Me(Me.tableRebatemensual.fec_altaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function Isfec_venceNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.fec_venceColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub Setfec_venceNull()
      Me(Me.tableRebatemensual.fec_venceColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsdeudorNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.deudorColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetdeudorNull()
      Me(Me.tableRebatemensual.deudorColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IstasaoperNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.tasaoperColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SettasaoperNull()
      Me(Me.tableRebatemensual.tasaoperColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsrebateptsNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.rebateptsColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetrebateptsNull()
      Me(Me.tableRebatemensual.rebateptsColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsinteresNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.interesColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetinteresNull()
      Me(Me.tableRebatemensual.interesColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsintbxmasNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.intbxmasColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetintbxmasNull()
      Me(Me.tableRebatemensual.intbxmasColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsrebateNull() As Boolean
      Return Me.IsNull(Me.tableRebatemensual.rebateColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetrebateNull()
      Me(Me.tableRebatemensual.rebateColumn) = Global.System.Convert.DBNull
    End Sub
  End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SP_ReporteControlRiesgoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SP_ReporteControlRiesgoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SP_ReporteControlRiesgoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SP_ReporteControlRiesgoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class NotificacionesDetalleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As NotificacionesDetalleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As NotificacionesDetalleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As NotificacionesDetalleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SP_ConsultaAforosLiquidadosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SP_ConsultaAforosLiquidadosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SP_ConsultaAforosLiquidadosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SP_ConsultaAforosLiquidadosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class detalleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As detalleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As detalleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As detalleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SP_InformaCobrosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SP_InformaCobrosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SP_InformaCobrosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SP_InformaCobrosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ReporteadeudosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ReporteadeudosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ReporteadeudosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ReporteadeudosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class AnexoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AnexoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As AnexoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As AnexoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class usersregsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As usersregsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As usersregsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As usersregsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RebatemensualRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RebatemensualRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RebatemensualRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RebatemensualRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace FactorDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SP_ReporteControlRiesgoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SP_ReporteControlRiesgo"
            tableMapping.ColumnMappings.Add("lcredito", "lcredito")
            tableMapping.ColumnMappings.Add("id_rec", "id_rec")
            tableMapping.ColumnMappings.Add("clientet24", "clientet24")
            tableMapping.ColumnMappings.Add("cliente", "cliente")
            tableMapping.ColumnMappings.Add("nombre", "nombre")
            tableMapping.ColumnMappings.Add("ldescrip", "ldescrip")
            tableMapping.ColumnMappings.Add("lmonto", "lmonto")
            tableMapping.ColumnMappings.Add("lutilizado", "lutilizado")
            tableMapping.ColumnMappings.Add("ldisponibl", "ldisponibl")
            tableMapping.ColumnMappings.Add("lvence", "lvence")
            tableMapping.ColumnMappings.Add("porcentaje", "porcentaje")
            tableMapping.ColumnMappings.Add("idmultiple", "idmultiple")
            tableMapping.ColumnMappings.Add("cuenta", "cuenta")
            tableMapping.ColumnMappings.Add("adeudo", "adeudo")
            tableMapping.ColumnMappings.Add("vencida", "vencida")
            tableMapping.ColumnMappings.Add("garantsdo", "garantsdo")
            tableMapping.ColumnMappings.Add("garantutl", "garantutl")
            tableMapping.ColumnMappings.Add("lmultiple", "lmultiple")
            tableMapping.ColumnMappings.Add("RgoDesc", "RgoDesc")
            tableMapping.ColumnMappings.Add("gliq", "gliq")
            tableMapping.ColumnMappings.Add("Cancela", "Cancela")
            tableMapping.ColumnMappings.Add("Infolinea", "Infolinea")
            tableMapping.ColumnMappings.Add("Div", "Div")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("FactorContext").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SP_ReporteControlRiesgo"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClienteID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As FactorDataSet.SP_ReporteControlRiesgoDataTable, ByVal ClienteID As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ClienteID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ClienteID.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ClienteID As Global.System.Nullable(Of Integer)) As FactorDataSet.SP_ReporteControlRiesgoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ClienteID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ClienteID.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As FactorDataSet.SP_ReporteControlRiesgoDataTable = New FactorDataSet.SP_ReporteControlRiesgoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class NotificacionesDetalleTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "NotificacionesDetalle"
            tableMapping.ColumnMappings.Add("contrato", "contrato")
            tableMapping.ColumnMappings.Add("cesion", "cesion")
            tableMapping.ColumnMappings.Add("docto", "docto")
            tableMapping.ColumnMappings.Add("deudor", "deudor")
            tableMapping.ColumnMappings.Add("nombre", "nombre")
            tableMapping.ColumnMappings.Add("deuname", "deuname")
            tableMapping.ColumnMappings.Add("calle", "calle")
            tableMapping.ColumnMappings.Add("noext", "noext")
            tableMapping.ColumnMappings.Add("noint", "noint")
            tableMapping.ColumnMappings.Add("domicilio", "domicilio")
            tableMapping.ColumnMappings.Add("municipio", "municipio")
            tableMapping.ColumnMappings.Add("estado", "estado")
            tableMapping.ColumnMappings.Add("colonia", "colonia")
            tableMapping.ColumnMappings.Add("moneda", "moneda")
            tableMapping.ColumnMappings.Add("fec_alta", "fec_alta")
            tableMapping.ColumnMappings.Add("fec_vence", "fec_vence")
            tableMapping.ColumnMappings.Add("monto", "monto")
            tableMapping.ColumnMappings.Add("pagare", "pagare")
            tableMapping.ColumnMappings.Add("Cdomicilio", "Cdomicilio")
            tableMapping.ColumnMappings.Add("Cmunicipio", "Cmunicipio")
            tableMapping.ColumnMappings.Add("cveedo", "cveedo")
            tableMapping.ColumnMappings.Add("cvecd", "cvecd")
            tableMapping.ColumnMappings.Add("Cestado", "Cestado")
            tableMapping.ColumnMappings.Add("Cnombre", "Cnombre")
            tableMapping.ColumnMappings.Add("cColonia", "cColonia")
            tableMapping.ColumnMappings.Add("cp", "cp")
            tableMapping.ColumnMappings.Add("ccp", "ccp")
            tableMapping.ColumnMappings.Add("email", "email")
            tableMapping.ColumnMappings.Add("Altacont", "Altacont")
            tableMapping.ColumnMappings.Add("producto", "producto")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("FactorContext").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DISTINCT a.contrato  , a.cesion , a.docto , a.deudor , c.nombre , d.nombre"& _ 
                " As deuname , "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"d.calle,d.noext,d.noint,d.domicilio , d.municipio , d.estado , d"& _ 
                ".colonia, b.moneda , "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.fec_alta  , a.fec_vence , a.monto ,a.pagare ,  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CONCAT"& _ 
                "(RTRIM(LTRIM(c.Calle)) , ' ' , RTRIM(LTRIM(c.noext)) ) As Cdomicilio , c.municip"& _ 
                "io As Cmunicipio , c.cveedo , c.cvecd ,   "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"c.estado"&Global.Microsoft.VisualBasic.ChrW(9)&"   As Cestado    , c.nombre"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(9)&"   As Cnombre , c.colonia As cColonia , d.cp, c.cp As ccp, c.email,b.fec_alta A"& _ 
                "s Altacont, b.producto"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM doctos a JOIN contratos b "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ON a.contrato = b.contr"& _ 
                "ato "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"JOIN clientes  c ON b.cliente  = c.cliente  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"JOIN proveedor d ON a.deudor"& _ 
                "   = d.deudor "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"JOIN anexo     e ON a.contrato = e.contrato AND a.deudor = e.deu"& _ 
                "dor "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE a.fec_alta =  @fecha"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and a.contrato = @contrato"&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&" "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY a.co"& _ 
                "ntrato, a.deudor, a.cesion "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fecha", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "fec_alta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@contrato", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "contrato", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As FactorDataSet.NotificacionesDetalleDataTable, ByVal fecha As Global.System.Nullable(Of Date), ByVal contrato As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (contrato.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(contrato.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal fecha As Global.System.Nullable(Of Date), ByVal contrato As Global.System.Nullable(Of Integer)) As FactorDataSet.NotificacionesDetalleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (contrato.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(contrato.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As FactorDataSet.NotificacionesDetalleDataTable = New FactorDataSet.NotificacionesDetalleDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SP_ConsultaAforosLiquidadosTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SP_ConsultaAforosLiquidados"
            tableMapping.ColumnMappings.Add("contrato", "contrato")
            tableMapping.ColumnMappings.Add("importe", "importe")
            tableMapping.ColumnMappings.Add("pago", "pago")
            tableMapping.ColumnMappings.Add("Cuenta", "Cuenta")
            tableMapping.ColumnMappings.Add("folio", "folio")
            tableMapping.ColumnMappings.Add("movto", "movto")
            tableMapping.ColumnMappings.Add("nombre", "nombre")
            tableMapping.ColumnMappings.Add("cobranza", "cobranza")
            tableMapping.ColumnMappings.Add("pagomatriz", "pagomatriz")
            tableMapping.ColumnMappings.Add("fecpago", "fecpago")
            tableMapping.ColumnMappings.Add("Moneda", "Moneda")
            tableMapping.ColumnMappings.Add("userid", "userid")
            tableMapping.ColumnMappings.Add("numreccta", "numreccta")
            tableMapping.ColumnMappings.Add("idctabanco", "idctabanco")
            tableMapping.ColumnMappings.Add("benef", "benef")
            tableMapping.ColumnMappings.Add("producto", "producto")
            tableMapping.ColumnMappings.Add("mone", "mone")
            tableMapping.ColumnMappings.Add("id", "id")
            tableMapping.ColumnMappings.Add("identidad", "identidad")
            tableMapping.ColumnMappings.Add("aforo", "aforo")
            tableMapping.ColumnMappings.Add("descto", "descto")
            tableMapping.ColumnMappings.Add("bonifica", "bonifica")
            tableMapping.ColumnMappings.Add("cartera", "cartera")
            tableMapping.ColumnMappings.Add("adeudos", "adeudos")
            tableMapping.ColumnMappings.Add("numrec", "numrec")
            tableMapping.ColumnMappings.Add("ctabanco", "ctabanco")
            tableMapping.ColumnMappings.Add("Origen", "Origen")
            tableMapping.ColumnMappings.Add("cuenta1", "cuenta1")
            tableMapping.ColumnMappings.Add("shortname", "shortname")
            tableMapping.ColumnMappings.Add("clabe", "clabe")
            tableMapping.ColumnMappings.Add("timestart", "timestart")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("FactorContext").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SP_ConsultaAforosLiquidados"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fecha", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As FactorDataSet.SP_ConsultaAforosLiquidadosDataTable, ByVal fecha As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal fecha As Global.System.Nullable(Of Date)) As FactorDataSet.SP_ConsultaAforosLiquidadosDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As FactorDataSet.SP_ConsultaAforosLiquidadosDataTable = New FactorDataSet.SP_ConsultaAforosLiquidadosDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class detalleTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "detalle"
            tableMapping.ColumnMappings.Add("iddetalle", "iddetalle")
            tableMapping.ColumnMappings.Add("folio", "folio")
            tableMapping.ColumnMappings.Add("contrato", "contrato")
            tableMapping.ColumnMappings.Add("deudor", "deudor")
            tableMapping.ColumnMappings.Add("docto", "docto")
            tableMapping.ColumnMappings.Add("pagare", "pagare")
            tableMapping.ColumnMappings.Add("referencia", "referencia")
            tableMapping.ColumnMappings.Add("fec_vence", "fec_vence")
            tableMapping.ColumnMappings.Add("importe", "importe")
            tableMapping.ColumnMappings.Add("tinter", "tinter")
            tableMapping.ColumnMappings.Add("ivainteres", "ivainteres")
            tableMapping.ColumnMappings.Add("monto", "monto")
            tableMapping.ColumnMappings.Add("descto", "descto")
            tableMapping.ColumnMappings.Add("hono", "hono")
            tableMapping.ColumnMappings.Add("iva", "iva")
            tableMapping.ColumnMappings.Add("void", "void")
            tableMapping.ColumnMappings.Add("plazo", "plazo")
            tableMapping.ColumnMappings.Add("int_diario", "int_diario")
            tableMapping.ColumnMappings.Add("ctetinter", "ctetinter")
            tableMapping.ColumnMappings.Add("ctehono", "ctehono")
            tableMapping.ColumnMappings.Add("cteiva", "cteiva")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [detalle] WHERE (([iddetalle] = @Original_iddetalle))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_iddetalle", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 0, "iddetalle", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [detalle] ([folio], [contrato], [deudor], [docto], [pagare], [referen"& _ 
                "cia], [fec_vence], [importe], [tinter], [ivainteres], [monto], [descto], [hono],"& _ 
                " [iva], [void], [plazo], [int_diario], [ctetinter], [ctehono], [cteiva]) VALUES "& _ 
                "(@folio, @contrato, @deudor, @docto, @pagare, @referencia, @fec_vence, @importe,"& _ 
                " @tinter, @ivainteres, @monto, @descto, @hono, @iva, @void, @plazo, @int_diario,"& _ 
                " @ctetinter, @ctehono, @cteiva)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@folio", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "folio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@contrato", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "contrato", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@deudor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "deudor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@docto", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "docto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pagare", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "pagare", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@referencia", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "referencia", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fec_vence", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fec_vence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@importe", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 2, "importe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@tinter", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 2, "tinter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ivainteres", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 2, "ivainteres", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@monto", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 2, "monto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@descto", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 2, "descto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hono", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 2, "hono", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@iva", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 2, "iva", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@void", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "void", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@plazo", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 5, 0, "plazo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@int_diario", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 4, "int_diario", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ctetinter", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "ctetinter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ctehono", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "ctehono", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@cteiva", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "cteiva", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [detalle] SET [folio] = @folio, [contrato] = @contrato, [deudor] = @deudor"& _ 
                ", [docto] = @docto, [pagare] = @pagare, [referencia] = @referencia, [fec_vence] "& _ 
                "= @fec_vence, [importe] = @importe, [tinter] = @tinter, [ivainteres] = @ivainter"& _ 
                "es, [monto] = @monto, [descto] = @descto, [hono] = @hono, [iva] = @iva, [void] ="& _ 
                " @void, [plazo] = @plazo, [int_diario] = @int_diario, [ctetinter] = @ctetinter, "& _ 
                "[ctehono] = @ctehono, [cteiva] = @cteiva WHERE (([iddetalle] = @Original_iddetal"& _ 
                "le))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@folio", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "folio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@contrato", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "contrato", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@deudor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "deudor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@docto", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "docto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pagare", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "pagare", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@referencia", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "referencia", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fec_vence", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fec_vence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@importe", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 2, "importe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@tinter", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 2, "tinter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ivainteres", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 2, "ivainteres", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@monto", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 2, "monto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@descto", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 2, "descto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hono", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 2, "hono", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@iva", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 2, "iva", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@void", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "void", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@plazo", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 5, 0, "plazo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@int_diario", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 14, 4, "int_diario", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ctetinter", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "ctetinter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ctehono", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "ctehono", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@cteiva", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "cteiva", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_iddetalle", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 0, "iddetalle", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("FactorContext").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        iddetalle, folio, contrato, deudor, docto, pagare, referencia, fec_"& _ 
                "vence, importe, tinter, ivainteres, monto, descto, hono, iva, void, plazo, int_d"& _ 
                "iario, ctetinter, ctehono, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         cteiva"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            de"& _ 
                "talle"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As FactorDataSet.detalleDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As FactorDataSet.detalleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As FactorDataSet.detalleDataTable = New FactorDataSet.detalleDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As FactorDataSet.detalleDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As FactorDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "detalle")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_iddetalle As Decimal) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_iddetalle,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal folio As Global.System.Nullable(Of Integer),  _
                    ByVal contrato As Global.System.Nullable(Of Integer),  _
                    ByVal deudor As Global.System.Nullable(Of Integer),  _
                    ByVal docto As String,  _
                    ByVal pagare As String,  _
                    ByVal referencia As String,  _
                    ByVal fec_vence As Global.System.Nullable(Of Date),  _
                    ByVal importe As Global.System.Nullable(Of Decimal),  _
                    ByVal tinter As Global.System.Nullable(Of Decimal),  _
                    ByVal ivainteres As Global.System.Nullable(Of Decimal),  _
                    ByVal monto As Global.System.Nullable(Of Decimal),  _
                    ByVal descto As Global.System.Nullable(Of Decimal),  _
                    ByVal hono As Global.System.Nullable(Of Decimal),  _
                    ByVal iva As Global.System.Nullable(Of Decimal),  _
                    ByVal void As Global.System.Nullable(Of Boolean),  _
                    ByVal plazo As Global.System.Nullable(Of Decimal),  _
                    ByVal int_diario As Global.System.Nullable(Of Decimal),  _
                    ByVal ctetinter As Global.System.Nullable(Of Decimal),  _
                    ByVal ctehono As Global.System.Nullable(Of Decimal),  _
                    ByVal cteiva As Global.System.Nullable(Of Decimal)) As Integer
            If (folio.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(folio.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (contrato.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(contrato.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (deudor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(deudor.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (docto Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(docto,String)
            End If
            If (pagare Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(pagare,String)
            End If
            If (referencia Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(referencia,String)
            End If
            If (fec_vence.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(fec_vence.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (importe.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(importe.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (tinter.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(tinter.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (ivainteres.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ivainteres.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (monto.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(monto.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (descto.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(descto.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (hono.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(hono.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (iva.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(iva.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (void.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(void.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (plazo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(plazo.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (int_diario.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(int_diario.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (ctetinter.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(ctetinter.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (ctehono.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(ctehono.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (cteiva.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(cteiva.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal folio As Global.System.Nullable(Of Integer),  _
                    ByVal contrato As Global.System.Nullable(Of Integer),  _
                    ByVal deudor As Global.System.Nullable(Of Integer),  _
                    ByVal docto As String,  _
                    ByVal pagare As String,  _
                    ByVal referencia As String,  _
                    ByVal fec_vence As Global.System.Nullable(Of Date),  _
                    ByVal importe As Global.System.Nullable(Of Decimal),  _
                    ByVal tinter As Global.System.Nullable(Of Decimal),  _
                    ByVal ivainteres As Global.System.Nullable(Of Decimal),  _
                    ByVal monto As Global.System.Nullable(Of Decimal),  _
                    ByVal descto As Global.System.Nullable(Of Decimal),  _
                    ByVal hono As Global.System.Nullable(Of Decimal),  _
                    ByVal iva As Global.System.Nullable(Of Decimal),  _
                    ByVal void As Global.System.Nullable(Of Boolean),  _
                    ByVal plazo As Global.System.Nullable(Of Decimal),  _
                    ByVal int_diario As Global.System.Nullable(Of Decimal),  _
                    ByVal ctetinter As Global.System.Nullable(Of Decimal),  _
                    ByVal ctehono As Global.System.Nullable(Of Decimal),  _
                    ByVal cteiva As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_iddetalle As Decimal) As Integer
            If (folio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(folio.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (contrato.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(contrato.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (deudor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(deudor.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (docto Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(docto,String)
            End If
            If (pagare Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(pagare,String)
            End If
            If (referencia Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(referencia,String)
            End If
            If (fec_vence.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(fec_vence.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (importe.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(importe.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (tinter.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(tinter.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (ivainteres.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ivainteres.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (monto.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(monto.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (descto.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(descto.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (hono.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(hono.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (iva.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(iva.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (void.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(void.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (plazo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(plazo.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (int_diario.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(int_diario.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (ctetinter.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(ctetinter.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (ctehono.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(ctehono.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (cteiva.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(cteiva.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_iddetalle,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SP_InformaCobrosTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("FactorContext").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SP_InformaCobros"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fecha", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@contrato", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As FactorDataSet.SP_InformaCobrosDataTable, ByVal fecha As Global.System.Nullable(Of Date), ByVal contrato As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (contrato.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(contrato.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal fecha As Global.System.Nullable(Of Date), ByVal contrato As Global.System.Nullable(Of Integer)) As FactorDataSet.SP_InformaCobrosDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (contrato.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(contrato.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As FactorDataSet.SP_InformaCobrosDataTable = New FactorDataSet.SP_InformaCobrosDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _detalleTableAdapter As detalleTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property detalleTableAdapter() As detalleTableAdapter
            Get
                Return Me._detalleTableAdapter
            End Get
            Set
                Me._detalleTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._detalleTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._detalleTableAdapter.Connection) Is Nothing)) Then
                    Return Me._detalleTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._detalleTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As FactorDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._detalleTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.detalle.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._detalleTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As FactorDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._detalleTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.detalle.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._detalleTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As FactorDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._detalleTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.detalle.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._detalleTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As FactorDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._detalleTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._detalleTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._detalleTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._detalleTableAdapter, Me._detalleTableAdapter.Connection)
                    Me._detalleTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._detalleTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._detalleTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._detalleTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._detalleTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._detalleTableAdapter) Is Nothing) Then
                    Me._detalleTableAdapter.Connection = CType(revertConnections(Me._detalleTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._detalleTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
