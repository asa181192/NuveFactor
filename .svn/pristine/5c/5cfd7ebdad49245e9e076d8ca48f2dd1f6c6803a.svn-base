Imports System.ComponentModel.DataAnnotations
Imports System.ComponentModel.DataAnnotations.Schema
Imports FactorEntidades


Namespace TesoreriaModel

#Region "Cuentas"

    Public Class CuentasModel

        Public Sub Cargacontroles()
            DivisaDropDownList = New controles().CargaDivisa()
            bancosDropDownList = New controles().cargaBancos()
        End Sub

        <Key>
        Public Property idctabanco As Integer

        <Display(Name:="N° Cuenta")>
        <StringLength(15)>
        <Required(ErrorMessage:="Capture el número de cuenta")>
        <RegularExpression("^[0-9]*\s*$", ErrorMessage:="El Valor debe ser numerico")>
        Public Property ctabanco As String

        <Display(Name:="N° Banco")>
        Public Property idbanco As Integer

        <Display(Name:="N° Sucursal")>
        <RegularExpression("^[0-9]*$", ErrorMessage:="El Valor debe ser numerico")>
        Public Property sucursal As Integer

        <StringLength(35)>
        <Display(Name:="Banco")>
        <Required(ErrorMessage:="Capture el nombre del banco")>
        Public Property banco As String

        <StringLength(35)>
        <Display(Name:="Sucursal Bancaria")>
        <Required(ErrorMessage:="Seleccione el banco")>
        Public Property sucbancaria As String

        <StringLength(60)>
        <Display(Name:="Slogan")>
        Public Property slogan As String

        <StringLength(20)>
        <Display(Name:="Cuenta Contable")>
        Public Property ctacontable As String

        <Column(TypeName:="numeric")>
        <Display(Name:="Saldo")>
        <DataType(DataType.Currency)>
        <DisplayFormat(DataFormatString:="{0:N}", ApplyFormatInEditMode:=True)>
        Public Property saldo As Decimal

        <Display(Name:="Oficina")>
        Public Property oficina As String

        Public Property moneda As Integer

        <Display(Name:="Divisa")>
        Public Property divisa As String

        <Display(Name:="Cancelado")>
        Public Property cancelado As Boolean

        <Display(Name:="Estatus")>
        Public Property cancel As String

        Public Property cheques As Integer

        Public Property traspasos As Integer

        Public Property depositos As Integer

        Public Property cargos As Integer

        Public Property inversion As Integer

        Public Property cancelacion As Integer

        Public Property fichas As Integer

        Public Property traspactivo As Boolean

        <Column(TypeName:="numeric")>
        Public Property cobrado As Decimal

        Public Property fecha As Date

        <Column(TypeName:="numeric")>
        Public Property entradas As Decimal

        <Column(TypeName:="numeric")>
        Public Property salidas As Decimal

        <StringLength(40)>
        Public Property banda As String

        <StringLength(3)>
        Public Property codigoseg As String

        <StringLength(3)>
        <Display(name:="N° Banco")>
        Public Property numbanco As String

        <StringLength(3)>
        Public Property plazacomp As String

        <Display(Name:="N° Sucursal")>
        Public Property nosucur As Integer

        Public Property interbanco As Boolean

        Public Property impbanda As Boolean

        Public Property fondeaoper As Boolean

        Public Property chequesfora As Boolean

        Public Property exporta As Boolean

        Public Property void As Boolean

        Public DivisaDropDownList As List(Of SelectListItem)
        Public bancosDropDownList As List(Of SelectListItem)

    End Class

#End Region

#Region "Movimientos"

    Public Class MovimientosModels

        Public Sub Cargacontroles()
            cuentasDropDownList = New controles().CargaCuentas()

        End Sub

        Public Property numrec As Integer

        Public Property idctabanco As Integer

        <Display(name:="Fecha")>
        <DisplayFormat(DataFormatString:="{0:dd-MM-yyyy}", ApplyFormatInEditMode:=True)>
        Public Property fecha As Date?

       

        Public Property ctabancobk As String

        Public Property tipo As String

        Public Property folio As Integer

        Public Property contrato As Integer

        Public Property cesion As Integer

        Public Property beneficiario As String

        Public Property concepto As String

        '<RegularExpression(
        Public Property concconta As String

        Public Property depoencta As Boolean

        Public Property impresiones As Integer

        Public Property entrada As Decimal

        <RegularExpression("^\d{0,10}(\.\d{0})?", ErrorMessage:="El Valor debe ser numerico y no tener decimales")>
        Public Property salida As Decimal

        Public Property saldo As Decimal

        Public Property ficha As Integer

        Public Property cancelado As Boolean

        <Display(Name:="Cancelado")>
        Public Property cancel As String

        <DisplayFormat(DataFormatString:="{0:dd-MM-yyyy}", ApplyFormatInEditMode:=True)>
        Public Property feccanc As Date

        Public Property vence As Date

        Public Property tasa As Decimal

        Public Property chequesfora As Boolean

        Public Property sucursal As Integer

        Public Property void As Boolean

        Public cuentasDropDownList As List(Of SelectListItem)

    End Class

#End Region



End Namespace
