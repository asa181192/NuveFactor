Imports System
Imports System.Collections.Generic
Imports System.Linq
Imports System.Net
Imports System.Web
Imports System.Web.Mvc
Imports System.Web.Security
Imports System.Configuration
Imports System.Net.Mail
Imports System.Threading
Imports nuve
Imports FactorEntidades
Imports Nelibur.ObjectMapper

<CustomAuthorize> _
Public Class HomeController
	Inherits Controller

	<HttpGet> _
	Function welcome(ByVal returnUrl As String) As ActionResult

		If Request.IsAuthenticated Then

			Dim model As New Helpers.Menu

			model.sMenu = ""

			If TryCast(Session("Permisos"), List(Of Integer)).Contains(Permisos.Acciones.CATALOGOS) Then

				model.sMenu &= "<div class=""col-xs-12 col-sm-6 col-md-3 BoxFlex"" id=""dvflexCatalogos"" >"
				model.sMenu &= "<div class=""BoxFlexShadow"">"
				model.sMenu &= "<p>Catálogos</p>"
				model.sMenu &= "<img src=""../Images/Catalogo.png"" />"
				model.sMenu &= "</div>"
				model.sMenu &= "</div>"

			End If

			If TryCast(Session("Permisos"), List(Of Integer)).Contains(Permisos.Acciones.TESORERIA) Then
				model.sMenu &= "<div class=""col-xs-12 col-sm-6 col-md-3 BoxFlex"" id=""dvflexCuentasBancos"" >"
				model.sMenu &= "<div class=""BoxFlexShadow"">"
				model.sMenu &= "<p>Tesorería</p>"
				model.sMenu &= "<img src=""../Images/cuentasBancos2.png"" />"
				model.sMenu &= "</div>"
				model.sMenu &= "</div>"
			End If

			If TryCast(Session("Permisos"), List(Of Integer)).Contains(Permisos.Acciones.OPERACIONES) Then
				model.sMenu &= "<div class=""col-xs-12 col-sm-6 col-md-3 BoxFlex"" id=""dvflexOperaciones"" >"
				model.sMenu &= "<div class=""BoxFlexShadow"">"
				model.sMenu &= "<p>Operaciones</p>"
				model.sMenu &= "<img src=""../Images/Operacion.png"" />"
				model.sMenu &= "</div>"
				model.sMenu &= "</div>"
			End If

			If TryCast(Session("Permisos"), List(Of Integer)).Contains(Permisos.Acciones.PROMOCION) Then
				model.sMenu &= "<div class=""col-xs-12 col-sm-6 col-md-3 BoxFlex"" id=""dvflexPromocion"" >"
				model.sMenu &= "<div class=""BoxFlexShadow"">"
				model.sMenu &= "<p>Promoción</p>"
				model.sMenu &= "<img src=""../Images/Promocion.png"" />"
				model.sMenu &= "</div>"
				model.sMenu &= "</div>"
			End If

			If TryCast(Session("Permisos"), List(Of Integer)).Contains(Permisos.Acciones.CONTABILIDAD) Then
				model.sMenu &= "<div class=""col-xs-12 col-sm-6 col-md-3 BoxFlex"" id=""dvflexConta"" >"
				model.sMenu &= "<div class=""BoxFlexShadow"">"
				model.sMenu &= "<p>Contabilidad</p>"
				model.sMenu &= "<img src=""../Images/Conta.png"" />"
				model.sMenu &= "</div>"
				model.sMenu &= "</div>"
			End If

			If TryCast(Session("Permisos"), List(Of Integer)).Contains(Permisos.Acciones.PORTAL) Then
				model.sMenu &= "<div class=""col-xs-12 col-sm-6 col-md-3 BoxFlex"" id=""dvflexPortal"" >"
				model.sMenu &= "<div class=""BoxFlexShadow"">"
				model.sMenu &= "<p>Portal</p>"
				model.sMenu &= "<img src=""../Images/Portal.png"" />"
				model.sMenu &= "</div>"
				model.sMenu &= "</div>"
			End If

			If TryCast(Session("Permisos"), List(Of Integer)).Contains(Permisos.Acciones.ADMINISTRACION) Then
				model.sMenu &= "<div class=""col-xs-12 col-sm-6 col-md-3 BoxFlex"" id=""dvflexAdministracion"" >"
				model.sMenu &= "<div class=""BoxFlexShadow"">"
				model.sMenu &= "<p>Administración</p>"
				model.sMenu &= "<img src=""../Images/admin.png"" />"
				model.sMenu &= "</div>"
				model.sMenu &= "</div>"
			End If

			model.sMenu &= "<div class=""col-xs-12 col-sm-6 col-md-3 BoxFlex"" id=""dvflexReportes"" >"
			model.sMenu &= "<div class=""BoxFlexShadow"">"
			model.sMenu &= "<p>Reportes</p>"
			model.sMenu &= "<img src=""../Images/analysis.png"" />"
			model.sMenu &= "</div>"
			model.sMenu &= "</div>"

			Return View(model)

		Else
			Return RedirectToAction("login", "Account")
		End If
	End Function

	<HttpGet> _
	Function configuracion() As ActionResult
		Return View()
	End Function

	<HttpGet()>
	Public Function obtenerVersiones() As ActionResult

		Dim jresult = New JsonResult()
		Dim resultado
		Dim consulta = New FactorBAL.Manager()
		Dim lista = New List(Of Versiones)

		resultado = consulta.obtenerVersionesBAL(lista)

		If resultado.Ok And resultado IsNot Nothing Then

			jresult = New CustomJsonResult With {
			  .Data = New With {Key .Results = lista,
				.JsonRequestBehavior = JsonRequestBehavior.AllowGet}
			}

		Else
			resultado.Mensaje = "Ocurrio un error al consultar la informacion"
			jresult = Json(New With {Key .Mensaje = "ERR!!" + resultado.Mensaje + "!!" + resultado.Detalle}, JsonRequestBehavior.AllowGet)
		End If

		Return jresult

	End Function

	Public Function consultarVersion(id As Integer) As ActionResult
		Dim consulta = New FactorBAL.Manager()
		Dim notas = ""
		Dim Result = consulta.DetalleVersionBAL(id, notas)

		ViewBag.notas = notas
		Return View()
	End Function

	<HttpGet()>
	Public Function GuardarVersion() As ActionResult
		Dim model = New ModeloVersion()
		Return View(model)
	End Function

	<HttpPost()>
	Public Function GuardarVersion(modelo As ModeloVersion) As ActionResult
		Dim resultado
		If ModelState.IsValid Then
			Dim bs = New FactorBAL.Manager()

			Dim model As New FactorEntidades.version()
			model.fecha = modelo.fecha
			model.notas = modelo.notas
			model.version1 = modelo.version
			resultado = bs.NuevaVersionBAL(model)

			If resultado.Ok And resultado IsNot Nothing Then
				resultado.Mensaje = "Registro Guardado"
				FactorBAL.Utility.Monitor(Session("USERID"), "Agregado nuevo versionamiento version : " + model.version1)
				resultado.tipo = Enumerador.eTipoTransaccion.eActualizar
			Else
				resultado.Mensaje = String.Format("Ocurrio un error al tratar de actualizar el registro!! {0}" +
											"Tipo de error:{1}", Environment.NewLine, resultado.Detalle)

			End If

			Return Json(New With {Key .Result = resultado.Ok, .color = "success", .Text = resultado.Mensaje, .Tipo = resultado.Tipo, .titulo = ""})
		Else
			resultado = New Result(False)
			Return Json(New With {Key .Result = resultado.Ok, .color = "warning", .Text = resultado.Mensaje, .titulo = "Error favor de revisar los campos !!"})
		End If
	End Function

End Class
